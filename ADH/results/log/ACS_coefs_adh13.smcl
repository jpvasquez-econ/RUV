{smcl}
{com}{sf}{ul off}{err}{hline 2}Break{hline 2}
{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

end of do-file

{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. use year puma perwt age classwkrd gq empstat ind1990 statefip using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{err}{hline 2}Break{hline 2}
{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

end of do-file

{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. 
{txt}end of do-file

{com}. tab wkw

      {txt}weeks {c |}
worked last {c |}
       year {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res}    765,299       20.32       20.32
{txt}          1 {c |}{res}     12,718        0.34       20.66
{txt}          2 {c |}{res}     15,983        0.42       21.08
{txt}          3 {c |}{res}     14,312        0.38       21.46
{txt}          4 {c |}{res}     25,945        0.69       22.15
{txt}          5 {c |}{res}     10,409        0.28       22.43
{txt}          6 {c |}{res}     19,328        0.51       22.94
{txt}          7 {c |}{res}      4,903        0.13       23.07
{txt}          8 {c |}{res}     30,664        0.81       23.89
{txt}          9 {c |}{res}      6,198        0.16       24.05
{txt}         10 {c |}{res}     23,480        0.62       24.68
{txt}         11 {c |}{res}      3,482        0.09       24.77
{txt}         12 {c |}{res}     55,663        1.48       26.25
{txt}         13 {c |}{res}      6,218        0.17       26.41
{txt}         14 {c |}{res}      7,618        0.20       26.61
{txt}         15 {c |}{res}     10,684        0.28       26.90
{txt}         16 {c |}{res}     25,880        0.69       27.58
{txt}         17 {c |}{res}      3,681        0.10       27.68
{txt}         18 {c |}{res}      7,161        0.19       27.87
{txt}         19 {c |}{res}      1,622        0.04       27.92
{txt}         20 {c |}{res}     44,355        1.18       29.09
{txt}         21 {c |}{res}      3,030        0.08       29.17
{txt}         22 {c |}{res}      6,381        0.17       29.34
{txt}         23 {c |}{res}      2,473        0.07       29.41
{txt}         24 {c |}{res}     28,546        0.76       30.17
{txt}         25 {c |}{res}     15,654        0.42       30.58
{txt}         26 {c |}{res}     39,234        1.04       31.62
{txt}         27 {c |}{res}      3,038        0.08       31.71
{txt}         28 {c |}{res}     18,485        0.49       32.20
{txt}         29 {c |}{res}      2,330        0.06       32.26
{txt}         30 {c |}{res}     39,760        1.06       33.31
{txt}         31 {c |}{res}      1,730        0.05       33.36
{txt}         32 {c |}{res}     28,107        0.75       34.11
{txt}         33 {c |}{res}      3,011        0.08       34.19
{txt}         34 {c |}{res}      5,824        0.15       34.34
{txt}         35 {c |}{res}     13,671        0.36       34.70
{txt}         36 {c |}{res}     46,243        1.23       35.93
{txt}         37 {c |}{res}      5,169        0.14       36.07
{txt}         38 {c |}{res}     12,776        0.34       36.41
{txt}         39 {c |}{res}      6,766        0.18       36.59
{txt}         40 {c |}{res}    106,297        2.82       39.41
{txt}         41 {c |}{res}      3,955        0.11       39.52
{txt}         42 {c |}{res}     23,131        0.61       40.13
{txt}         43 {c |}{res}      6,370        0.17       40.30
{txt}         44 {c |}{res}     28,590        0.76       41.06
{txt}         45 {c |}{res}     29,973        0.80       41.85
{txt}         46 {c |}{res}     23,751        0.63       42.48
{txt}         47 {c |}{res}     13,186        0.35       42.83
{txt}         48 {c |}{res}    125,095        3.32       46.16
{txt}         49 {c |}{res}     28,893        0.77       46.92
{txt}         50 {c |}{res}    147,852        3.93       50.85
{txt}         51 {c |}{res}     38,154        1.01       51.86
{txt}         52 {c |}{res}  1,812,754       48.14      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}  3,765,832      100.00

{com}. tab wkhp

 {txt}usual hours {c |}
  worked per {c |}
        week {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
         n/a {c |}{res}  1,151,851       20.37       20.37
{txt}           1 {c |}{res}      3,099        0.05       20.42
{txt}           2 {c |}{res}      6,619        0.12       20.54
{txt}           3 {c |}{res}      7,558        0.13       20.68
{txt}           4 {c |}{res}     14,250        0.25       20.93
{txt}           5 {c |}{res}     12,759        0.23       21.15
{txt}           6 {c |}{res}     13,997        0.25       21.40
{txt}           7 {c |}{res}      5,764        0.10       21.50
{txt}           8 {c |}{res}     28,509        0.50       22.01
{txt}           9 {c |}{res}      5,410        0.10       22.10
{txt}          10 {c |}{res}     52,865        0.93       23.04
{txt}          11 {c |}{res}      2,674        0.05       23.08
{txt}          12 {c |}{res}     33,604        0.59       23.68
{txt}          13 {c |}{res}      3,790        0.07       23.75
{txt}          14 {c |}{res}      6,544        0.12       23.86
{txt}          15 {c |}{res}     63,919        1.13       24.99
{txt}          16 {c |}{res}     29,152        0.52       25.51
{txt}          17 {c |}{res}      4,515        0.08       25.59
{txt}          18 {c |}{res}     16,584        0.29       25.88
{txt}          19 {c |}{res}      2,725        0.05       25.93
{txt}          20 {c |}{res}    196,563        3.48       29.40
{txt}          21 {c |}{res}      5,047        0.09       29.49
{txt}          22 {c |}{res}      7,810        0.14       29.63
{txt}          23 {c |}{res}      5,631        0.10       29.73
{txt}          24 {c |}{res}     41,337        0.73       30.46
{txt}          25 {c |}{res}     98,079        1.73       32.20
{txt}          26 {c |}{res}      5,861        0.10       32.30
{txt}          27 {c |}{res}      6,660        0.12       32.42
{txt}          28 {c |}{res}     17,157        0.30       32.72
{txt}          29 {c |}{res}      2,564        0.05       32.77
{txt}          30 {c |}{res}    201,761        3.57       36.34
{txt}          31 {c |}{res}      1,986        0.04       36.37
{txt}          32 {c |}{res}     62,505        1.11       37.48
{txt}          33 {c |}{res}      8,316        0.15       37.62
{txt}          34 {c |}{res}      7,677        0.14       37.76
{txt}          35 {c |}{res}    146,438        2.59       40.35
{txt}          36 {c |}{res}     50,193        0.89       41.24
{txt}          37 {c |}{res}     32,116        0.57       41.80
{txt}          38 {c |}{res}     55,449        0.98       42.78
{txt}          39 {c |}{res}      8,134        0.14       42.93
{txt}          40 {c |}{res}  1,958,328       34.63       77.56
{txt}          41 {c |}{res}      6,171        0.11       77.67
{txt}          42 {c |}{res}     41,307        0.73       78.40
{txt}          43 {c |}{res}     19,438        0.34       78.74
{txt}          44 {c |}{res}     21,249        0.38       79.12
{txt}          45 {c |}{res}    258,987        4.58       83.70
{txt}          46 {c |}{res}     12,852        0.23       83.93
{txt}          47 {c |}{res}      8,598        0.15       84.08
{txt}          48 {c |}{res}     66,386        1.17       85.25
{txt}          49 {c |}{res}      3,653        0.06       85.32
{txt}          50 {c |}{res}    383,648        6.78       92.10
{txt}          51 {c |}{res}      1,476        0.03       92.13
{txt}          52 {c |}{res}     15,261        0.27       92.40
{txt}          53 {c |}{res}      3,985        0.07       92.47
{txt}          54 {c |}{res}      5,230        0.09       92.56
{txt}          55 {c |}{res}     84,052        1.49       94.05
{txt}          56 {c |}{res}     10,465        0.19       94.23
{txt}          57 {c |}{res}      1,831        0.03       94.27
{txt}          58 {c |}{res}      4,458        0.08       94.34
{txt}          59 {c |}{res}        542        0.01       94.35
{txt}          60 {c |}{res}    184,546        3.26       97.62
{txt}          61 {c |}{res}        278        0.00       97.62
{txt}          62 {c |}{res}      1,494        0.03       97.65
{txt}          63 {c |}{res}      1,252        0.02       97.67
{txt}          64 {c |}{res}      1,481        0.03       97.70
{txt}          65 {c |}{res}     25,784        0.46       98.15
{txt}          66 {c |}{res}      1,512        0.03       98.18
{txt}          67 {c |}{res}        497        0.01       98.19
{txt}          68 {c |}{res}      1,607        0.03       98.22
{txt}          69 {c |}{res}        265        0.00       98.22
{txt}          70 {c |}{res}     38,464        0.68       98.90
{txt}          71 {c |}{res}         97        0.00       98.90
{txt}          72 {c |}{res}      7,508        0.13       99.04
{txt}          73 {c |}{res}        230        0.00       99.04
{txt}          74 {c |}{res}        285        0.01       99.05
{txt}          75 {c |}{res}      6,834        0.12       99.17
{txt}          76 {c |}{res}        402        0.01       99.17
{txt}          77 {c |}{res}        522        0.01       99.18
{txt}          78 {c |}{res}        641        0.01       99.19
{txt}          79 {c |}{res}         69        0.00       99.19
{txt}          80 {c |}{res}     23,112        0.41       99.60
{txt}          81 {c |}{res}         78        0.00       99.60
{txt}          82 {c |}{res}        271        0.00       99.61
{txt}          83 {c |}{res}         99        0.00       99.61
{txt}          84 {c |}{res}      5,688        0.10       99.71
{txt}          85 {c |}{res}      1,520        0.03       99.74
{txt}          86 {c |}{res}        243        0.00       99.74
{txt}          87 {c |}{res}         97        0.00       99.75
{txt}          88 {c |}{res}        321        0.01       99.75
{txt}          89 {c |}{res}         61        0.00       99.75
{txt}          90 {c |}{res}      3,802        0.07       99.82
{txt}          91 {c |}{res}        195        0.00       99.82
{txt}          92 {c |}{res}        113        0.00       99.82
{txt}          93 {c |}{res}         29        0.00       99.82
{txt}          94 {c |}{res}         89        0.00       99.83
{txt}          95 {c |}{res}        359        0.01       99.83
{txt}          96 {c |}{res}        792        0.01       99.85
{txt}          97 {c |}{res}         17        0.00       99.85
{txt}          98 {c |}{res}        708        0.01       99.86
{txt}99 (topcode) {c |}{res}      7,933        0.14      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}  5,654,684      100.00

{com}. tab wkhp, nolab

{txt}usual hours {c |}
 worked per {c |}
       week {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res}  1,151,851       20.37       20.37
{txt}          1 {c |}{res}      3,099        0.05       20.42
{txt}          2 {c |}{res}      6,619        0.12       20.54
{txt}          3 {c |}{res}      7,558        0.13       20.68
{txt}          4 {c |}{res}     14,250        0.25       20.93
{txt}          5 {c |}{res}     12,759        0.23       21.15
{txt}          6 {c |}{res}     13,997        0.25       21.40
{txt}          7 {c |}{res}      5,764        0.10       21.50
{txt}          8 {c |}{res}     28,509        0.50       22.01
{txt}          9 {c |}{res}      5,410        0.10       22.10
{txt}         10 {c |}{res}     52,865        0.93       23.04
{txt}         11 {c |}{res}      2,674        0.05       23.08
{txt}         12 {c |}{res}     33,604        0.59       23.68
{txt}         13 {c |}{res}      3,790        0.07       23.75
{txt}         14 {c |}{res}      6,544        0.12       23.86
{txt}         15 {c |}{res}     63,919        1.13       24.99
{txt}         16 {c |}{res}     29,152        0.52       25.51
{txt}         17 {c |}{res}      4,515        0.08       25.59
{txt}         18 {c |}{res}     16,584        0.29       25.88
{txt}         19 {c |}{res}      2,725        0.05       25.93
{txt}         20 {c |}{res}    196,563        3.48       29.40
{txt}         21 {c |}{res}      5,047        0.09       29.49
{txt}         22 {c |}{res}      7,810        0.14       29.63
{txt}         23 {c |}{res}      5,631        0.10       29.73
{txt}         24 {c |}{res}     41,337        0.73       30.46
{txt}         25 {c |}{res}     98,079        1.73       32.20
{txt}         26 {c |}{res}      5,861        0.10       32.30
{txt}         27 {c |}{res}      6,660        0.12       32.42
{txt}         28 {c |}{res}     17,157        0.30       32.72
{txt}         29 {c |}{res}      2,564        0.05       32.77
{txt}         30 {c |}{res}    201,761        3.57       36.34
{txt}         31 {c |}{res}      1,986        0.04       36.37
{txt}         32 {c |}{res}     62,505        1.11       37.48
{txt}         33 {c |}{res}      8,316        0.15       37.62
{txt}         34 {c |}{res}      7,677        0.14       37.76
{txt}         35 {c |}{res}    146,438        2.59       40.35
{txt}         36 {c |}{res}     50,193        0.89       41.24
{txt}         37 {c |}{res}     32,116        0.57       41.80
{txt}         38 {c |}{res}     55,449        0.98       42.78
{txt}         39 {c |}{res}      8,134        0.14       42.93
{txt}         40 {c |}{res}  1,958,328       34.63       77.56
{txt}         41 {c |}{res}      6,171        0.11       77.67
{txt}         42 {c |}{res}     41,307        0.73       78.40
{txt}         43 {c |}{res}     19,438        0.34       78.74
{txt}         44 {c |}{res}     21,249        0.38       79.12
{txt}         45 {c |}{res}    258,987        4.58       83.70
{txt}         46 {c |}{res}     12,852        0.23       83.93
{txt}         47 {c |}{res}      8,598        0.15       84.08
{txt}         48 {c |}{res}     66,386        1.17       85.25
{txt}         49 {c |}{res}      3,653        0.06       85.32
{txt}         50 {c |}{res}    383,648        6.78       92.10
{txt}         51 {c |}{res}      1,476        0.03       92.13
{txt}         52 {c |}{res}     15,261        0.27       92.40
{txt}         53 {c |}{res}      3,985        0.07       92.47
{txt}         54 {c |}{res}      5,230        0.09       92.56
{txt}         55 {c |}{res}     84,052        1.49       94.05
{txt}         56 {c |}{res}     10,465        0.19       94.23
{txt}         57 {c |}{res}      1,831        0.03       94.27
{txt}         58 {c |}{res}      4,458        0.08       94.34
{txt}         59 {c |}{res}        542        0.01       94.35
{txt}         60 {c |}{res}    184,546        3.26       97.62
{txt}         61 {c |}{res}        278        0.00       97.62
{txt}         62 {c |}{res}      1,494        0.03       97.65
{txt}         63 {c |}{res}      1,252        0.02       97.67
{txt}         64 {c |}{res}      1,481        0.03       97.70
{txt}         65 {c |}{res}     25,784        0.46       98.15
{txt}         66 {c |}{res}      1,512        0.03       98.18
{txt}         67 {c |}{res}        497        0.01       98.19
{txt}         68 {c |}{res}      1,607        0.03       98.22
{txt}         69 {c |}{res}        265        0.00       98.22
{txt}         70 {c |}{res}     38,464        0.68       98.90
{txt}         71 {c |}{res}         97        0.00       98.90
{txt}         72 {c |}{res}      7,508        0.13       99.04
{txt}         73 {c |}{res}        230        0.00       99.04
{txt}         74 {c |}{res}        285        0.01       99.05
{txt}         75 {c |}{res}      6,834        0.12       99.17
{txt}         76 {c |}{res}        402        0.01       99.17
{txt}         77 {c |}{res}        522        0.01       99.18
{txt}         78 {c |}{res}        641        0.01       99.19
{txt}         79 {c |}{res}         69        0.00       99.19
{txt}         80 {c |}{res}     23,112        0.41       99.60
{txt}         81 {c |}{res}         78        0.00       99.60
{txt}         82 {c |}{res}        271        0.00       99.61
{txt}         83 {c |}{res}         99        0.00       99.61
{txt}         84 {c |}{res}      5,688        0.10       99.71
{txt}         85 {c |}{res}      1,520        0.03       99.74
{txt}         86 {c |}{res}        243        0.00       99.74
{txt}         87 {c |}{res}         97        0.00       99.75
{txt}         88 {c |}{res}        321        0.01       99.75
{txt}         89 {c |}{res}         61        0.00       99.75
{txt}         90 {c |}{res}      3,802        0.07       99.82
{txt}         91 {c |}{res}        195        0.00       99.82
{txt}         92 {c |}{res}        113        0.00       99.82
{txt}         93 {c |}{res}         29        0.00       99.82
{txt}         94 {c |}{res}         89        0.00       99.83
{txt}         95 {c |}{res}        359        0.01       99.83
{txt}         96 {c |}{res}        792        0.01       99.85
{txt}         97 {c |}{res}         17        0.00       99.85
{txt}         98 {c |}{res}        708        0.01       99.86
{txt}         99 {c |}{res}      7,933        0.14      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}  5,654,684      100.00

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. gen labsup = wkw * wkhp
{txt}(1,888,852 missing values generated)

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. egen g1 = group(educ occ)
{err}variable {bf}educ{sf} not found
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. gen labsup = wkw * wkhp
{txt}(1,888,852 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(351 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,888,501 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(351 real changes made)

{com}. 
{txt}end of do-file

{com}. codebook labsup

{txt}{hline}
{res}labsup{right:(unlabeled)}
{txt}{hline}

{col 19}Type: Numeric ({res}float{txt})

{col 18}Range: [{res}0{txt},{res}5148{txt}]{col 55}Units: {res}1.000e-06
{col 10}{txt}Unique values: {res}5,607{col 51}{txt}Missing .: {res}0{txt}/{res}5,654,684

{txt}{col 19}Mean: {res}{ralign 7:1437.07}
{txt}{col 14}Std. dev.: {res}{ralign 7:935.934}

{txt}{col 12}Percentiles: {col 25}{ralign 7:10%}{ralign 10:25%}{ralign 10:50%}{ralign 10:75%}{ralign 10:90%}
{res}{col 25}{ralign 7:0}{ralign 10: 587.719}{ralign 10: 1689.45}{ralign 10:    2080}{ralign 10:    2350}

{com}. tab labsup
{err}{hline 2}Break{hline 2}
{txt}{search r(1), local:r(1);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         gen pop_weight = perwt * afactor 
{txt}
{com}.         gen weight = pop_weight * labsup
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         * population by czone
.         bys czone: egen pop_cz = sum(pop_weight) 
{txt}
{com}. 
. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [aw=weight] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}.   
. 
{txt}end of do-file

{com}. clear

. tab yr
{err}no variables defined
{txt}{search r(111), local:r(111);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. 
. 
. gen labsup = wkw * wkhp
{txt}(1,888,852 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(351 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,888,501 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(351 real changes made)

{com}. replace labsup = 1 if empl == 0
{txt}(1,638,679 real changes made)

{com}. 
. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}.                 
.                 
.         * multiply sample weight (perwt) by afactor to map from PUMA's to CZ
.         
.         gen pop_weight = perwt * afactor 
{txt}
{com}.         gen weight = pop_weight * labsup
{txt}
{com}.         
.         * population by czone
.         bys czone: egen pop_cz = sum(pop_weight) 
{txt}
{com}. 
. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [aw=weight] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}.   
. 
. * Gen variable of year for merge and save temp file
. gen yr = ${c -(}y2{c )-}
{txt}
{com}. tempfile temp           
{txt}
{com}. 
. 
. 
. 
. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. cap drop yr
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. gen year = 2000
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
. 
. 
. use raw_data/workfile_china.dta, replace
{txt}
{com}. 
. merge 1:1 using czone year using `temp'
{res}{err}invalid 'year' 
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. gen year = 2000
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. 
. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
. 
. 
. use raw_data/workfile_china.dta, replace
{txt}
{com}. 
. merge 1:1 using czone year using `temp'
{res}{err}invalid 'year' 
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. use raw_data/workfile_china.dta, replace
{txt}
{com}. 
{txt}end of do-file

{com}. tab yr

         {txt}yr {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
       1990 {c |}{res}        722       50.00       50.00
{txt}       2000 {c |}{res}        722       50.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      1,444      100.00

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. 
. 
. gen labsup = wkw * wkhp
{txt}(1,888,852 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(351 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,888,501 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(351 real changes made)

{com}. replace labsup = 1 if empl == 0
{txt}(1,638,679 real changes made)

{com}. 
. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}.                 
.                 
.         * multiply sample weight (perwt) by afactor to map from PUMA's to CZ
.         
.         gen pop_weight = perwt * afactor 
{txt}
{com}.         gen weight = pop_weight * labsup
{txt}
{com}.         
.         * population by czone
.         bys czone: egen pop_cz = sum(pop_weight) 
{txt}
{com}. 
. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [aw=weight] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}.   
. 
. * Gen variable of year for merge and save temp file
. gen yr = 2000
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
. 
. 
. use raw_data/workfile_china.dta, replace
{txt}
{com}. 
. merge 1:1 using czone year using `temp'
{res}{err}invalid 'year' 
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
. 
. 
. use raw_data/workfile_china.dta, replace
{txt}
{com}. 
. merge 1:1 using czone yr using `temp'
{res}{err}invalid 'yr' 
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. gen yr = 2000
{err}variable {bf}yr{sf} already defined
{txt}{search r(110), local:r(110);}

end of do-file

{search r(110), local:r(110);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
. 
. 
. use raw_data/workfile_china.dta, replace
{txt}
{com}. 
. merge 1:1 using czone yr using `temp'
{res}{err}invalid 'yr' 
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. 
. 
. gen labsup = wkw * wkhp
{txt}(1,888,852 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(351 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,888,501 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(351 real changes made)

{com}. replace labsup = 1 if empl == 0
{txt}(1,638,679 real changes made)

{com}. 
. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}.                 
.                 
.         * multiply sample weight (perwt) by afactor to map from PUMA's to CZ
.         
.         gen pop_weight = perwt * afactor 
{txt}
{com}.         gen weight = pop_weight * labsup
{txt}
{com}.         
.         * population by czone
.         bys czone: egen pop_cz = sum(pop_weight) 
{txt}
{com}. 
. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [aw=weight] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}.   
. 
. * Gen variable of year for merge and save temp file
. gen yr = 2000
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
. 
. use raw_data/workfile_china.dta, replace
{txt}
{com}. merge 1:1 czone yr using `temp', nogen 
{res}{txt}{p 0 7 2}
(variable
{bf:yr} was {bf:int}, now {bf:float} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             741
{txt}{col 9}from master{col 30}{res}             722{txt}  
{col 9}from using{col 30}{res}              19{txt}  

{col 5}Matched{col 30}{res}             722{txt}  
{col 5}{hline 41}

{com}. 
. 
. 
. 
{txt}end of do-file

{com}. drop if l_sh_empl == .
{txt}(19 observations deleted)

{com}. codebook czone

{txt}{hline}
{res}czone{right:(unlabeled)}
{txt}{hline}

{col 19}Type: Numeric ({res}float{txt})

{col 18}Range: [{res}100{txt},{res}39400{txt}]{col 55}Units: {res}1
{col 10}{txt}Unique values: {res}722{col 51}{txt}Missing .: {res}0{txt}/{res}1,444

{txt}{col 19}Mean: {res}{ralign 7:22132.3}
{txt}{col 14}Std. dev.: {res}{ralign 7:11097.8}

{txt}{col 12}Percentiles: {col 25}{ralign 7:10%}{ralign 10:25%}{ralign 10:50%}{ralign 10:75%}{ralign 10:90%}
{res}{col 25}{ralign 7:4800}{ralign 10:   12401}{ralign 10: 25950.5}{ralign 10:   30907}{ralign 10:   35300}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. rename (d_sh_empl_mfg d_sh_empl_nmfg l_sh_empl_mfg l_sh_empl_nmfg pop_cz lnchg_popworkage ) (d_sh_mfg d_sh_nmfg l_sh_mfg l_sh_nmfg pop_1664 d_sh_lnpop)
{res}{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. gen nmfg = empl - mfg
{txt}(722 missing values generated)

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. * gen log popcount changes for working age population
. gen sh_lnpop = ln(pop_1664)*100
{txt}(722 missing values generated)

{com}. gen l_sh_lnpop = ln(l_popcount)*100
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. * here we create the outcomes as shares of the working pop
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. gen sh_`var' = 100*(`var'/pop_1664) 
{txt}  3{com}. {c )-}       
{txt}(722 missing values generated)
(722 missing values generated)
(722 missing values generated)
(722 missing values generated)

{com}. 
. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. 
.         gen d_sh_`var'_2007 = (10/(2007-2000)) * (sh_`var' - l_sh_`var' ) if yr == `year'
{txt}  3{com}.         replace d_sh_`var'_2007 = d_sh_`var' if yr == 2000 
{txt}  4{com}. 
. {c )-}
{err}invalid syntax
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. 
.         gen d_sh_`var'_2007 = (10/(2007-2000)) * (sh_`var' - l_sh_`var' ) if yr == 2000
{txt}  3{com}.         replace d_sh_`var'_2007 = d_sh_`var' if yr == 1990 
{txt}  4{com}. 
. {c )-}
{txt}(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)

{com}. 
{txt}end of do-file

{com}. order d_sh_mfg d_sh_mfg

. order d_sh_mfg d_sh_mfg_2007

. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. ivregress 2sls d_sh_mfg (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48]
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   1066.82
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.3429
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         d_sh_mfg{col 19}{c |} Coefficient{col 31}  Std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-.5963601{col 31}{space 2}  .053969{col 42}{space 1}  -11.05{col 51}{space 3}0.000{col 59}{space 4}-.7021374{col 72}{space 3}-.4905828
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0402193{col 31}{space 2} .0090807{col 42}{space 1}   -4.43{col 51}{space 3}0.000{col 59}{space 4}-.0580173{col 72}{space 3}-.0224214
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}   .01314{col 31}{space 2} .0097178{col 42}{space 1}    1.35{col 51}{space 3}0.176{col 59}{space 4}-.0059066{col 72}{space 3} .0321867
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0303784{col 31}{space 2} .0063475{col 42}{space 1}    4.79{col 51}{space 3}0.000{col 59}{space 4} .0179374{col 72}{space 3} .0428193
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.0058603{col 31}{space 2} .0130735{col 42}{space 1}   -0.45{col 51}{space 3}0.654{col 59}{space 4}-.0314839{col 72}{space 3} .0197633
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.2448902{col 31}{space 2} .0255815{col 42}{space 1}   -9.57{col 51}{space 3}0.000{col 59}{space 4}-.2950291{col 72}{space 3}-.1947513
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}-.0590307{col 31}{space 2} .1750538{col 42}{space 1}   -0.34{col 51}{space 3}0.736{col 59}{space 4}-.4021297{col 72}{space 3} .2840684
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .3129508{col 31}{space 2} .2040157{col 42}{space 1}    1.53{col 51}{space 3}0.125{col 59}{space 4}-.0869127{col 72}{space 3} .7128143
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2} 1.260668{col 31}{space 2} .2040371{col 42}{space 1}    6.18{col 51}{space 3}0.000{col 59}{space 4} .8607626{col 72}{space 3} 1.660573
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.623558{col 31}{space 2} .2207413{col 42}{space 1}    7.36{col 51}{space 3}0.000{col 59}{space 4} 1.190913{col 72}{space 3} 2.056203
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2882165{col 31}{space 2}  .194934{col 42}{space 1}   -1.48{col 51}{space 3}0.139{col 59}{space 4}-.6702801{col 72}{space 3} .0938471
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.076234{col 31}{space 2} .2511617{col 42}{space 1}    4.29{col 51}{space 3}0.000{col 59}{space 4}  .583966{col 72}{space 3} 1.568502
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} .7316363{col 31}{space 2} .2185786{col 42}{space 1}    3.35{col 51}{space 3}0.001{col 59}{space 4} .3032302{col 72}{space 3} 1.160042
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4021016{col 31}{space 2} .2365104{col 42}{space 1}    1.70{col 51}{space 3}0.089{col 59}{space 4}-.0614502{col 72}{space 3} .8656534
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}  .026829{col 31}{space 2} .2140817{col 42}{space 1}    0.13{col 51}{space 3}0.900{col 59}{space 4}-.3927635{col 72}{space 3} .4464215
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-.2424246{col 31}{space 2} .1392663{col 42}{space 1}   -1.74{col 51}{space 3}0.082{col 59}{space 4}-.5153815{col 72}{space 3} .0305324
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 6.278516{col 31}{space 2} 1.098145{col 42}{space 1}    5.72{col 51}{space 3}0.000{col 59}{space 4} 4.126191{col 72}{space 3} 8.430841
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. ivregress 2sls d_sh_mfg_2007 (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48]
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   5687.70
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.7857
{txt}{col 51}Root MSE{col 67}=    {res} 3.6055

{txt}{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}    d_sh_mfg_2007{col 19}{c |} Coefficient{col 31}  Std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-1.848527{col 31}{space 2} .1375677{col 42}{space 1}  -13.44{col 51}{space 3}0.000{col 59}{space 4}-2.118155{col 72}{space 3}  -1.5789
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0582544{col 31}{space 2} .0231469{col 42}{space 1}   -2.52{col 51}{space 3}0.012{col 59}{space 4}-.1036216{col 72}{space 3}-.0128873
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2} .1103601{col 31}{space 2} .0247709{col 42}{space 1}    4.46{col 51}{space 3}0.000{col 59}{space 4}   .06181{col 72}{space 3} .1589102
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0781002{col 31}{space 2}   .01618{col 42}{space 1}    4.83{col 51}{space 3}0.000{col 59}{space 4}  .046388{col 72}{space 3} .1098123
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.2137416{col 31}{space 2} .0333245{col 42}{space 1}   -6.41{col 51}{space 3}0.000{col 59}{space 4}-.2790565{col 72}{space 3}-.1484268
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2} -.531173{col 31}{space 2} .0652077{col 42}{space 1}   -8.15{col 51}{space 3}0.000{col 59}{space 4}-.6589778{col 72}{space 3}-.4033683
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}  1.20242{col 31}{space 2} .4462144{col 42}{space 1}    2.69{col 51}{space 3}0.007{col 59}{space 4}  .327856{col 72}{space 3} 2.076984
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2}-.5833829{col 31}{space 2} .5200388{col 42}{space 1}   -1.12{col 51}{space 3}0.262{col 59}{space 4} -1.60264{col 72}{space 3} .4358744
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2}-1.389356{col 31}{space 2} .5200933{col 42}{space 1}   -2.67{col 51}{space 3}0.008{col 59}{space 4} -2.40872{col 72}{space 3}-.3699922
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} .2770481{col 31}{space 2} .5626726{col 42}{space 1}    0.49{col 51}{space 3}0.622{col 59}{space 4}  -.82577{col 72}{space 3} 1.379866
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.3764196{col 31}{space 2} .4968893{col 42}{space 1}   -0.76{col 51}{space 3}0.449{col 59}{space 4}-1.350305{col 72}{space 3} .5974656
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} .5048489{col 31}{space 2} .6402144{col 42}{space 1}    0.79{col 51}{space 3}0.430{col 59}{space 4}-.7499482{col 72}{space 3} 1.759646
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2}-.7379043{col 31}{space 2} .5571596{col 42}{space 1}   -1.32{col 51}{space 3}0.185{col 59}{space 4}-1.829917{col 72}{space 3} .3541085
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2}-.3263345{col 31}{space 2}  .602868{col 42}{space 1}   -0.54{col 51}{space 3}0.588{col 59}{space 4}-1.507934{col 72}{space 3} .8552652
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}-2.486004{col 31}{space 2} .5456972{col 42}{space 1}   -4.56{col 51}{space 3}0.000{col 59}{space 4}-3.555551{col 72}{space 3}-1.416457
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-11.00559{col 31}{space 2} .3549917{col 42}{space 1}  -31.00{col 51}{space 3}0.000{col 59}{space 4}-11.70136{col 72}{space 3}-10.30982
{txt}{space 12}_cons {c |}{col 19}{res}{space 2}  26.5537{col 31}{space 2} 2.799187{col 42}{space 1}    9.49{col 51}{space 3}0.000{col 59}{space 4}  21.0674{col 72}{space 3} 32.04001
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. 
{txt}end of do-file

{com}. tab wkw

      {txt}weeks {c |}
worked last {c |}
       year {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          0 {c |}{res}    765,299       20.32       20.32
{txt}          1 {c |}{res}     12,718        0.34       20.66
{txt}          2 {c |}{res}     15,983        0.42       21.08
{txt}          3 {c |}{res}     14,312        0.38       21.46
{txt}          4 {c |}{res}     25,945        0.69       22.15
{txt}          5 {c |}{res}     10,409        0.28       22.43
{txt}          6 {c |}{res}     19,328        0.51       22.94
{txt}          7 {c |}{res}      4,903        0.13       23.07
{txt}          8 {c |}{res}     30,664        0.81       23.89
{txt}          9 {c |}{res}      6,198        0.16       24.05
{txt}         10 {c |}{res}     23,480        0.62       24.68
{txt}         11 {c |}{res}      3,482        0.09       24.77
{txt}         12 {c |}{res}     55,663        1.48       26.25
{txt}         13 {c |}{res}      6,218        0.17       26.41
{txt}         14 {c |}{res}      7,618        0.20       26.61
{txt}         15 {c |}{res}     10,684        0.28       26.90
{txt}         16 {c |}{res}     25,880        0.69       27.58
{txt}         17 {c |}{res}      3,681        0.10       27.68
{txt}         18 {c |}{res}      7,161        0.19       27.87
{txt}         19 {c |}{res}      1,622        0.04       27.92
{txt}         20 {c |}{res}     44,355        1.18       29.09
{txt}         21 {c |}{res}      3,030        0.08       29.17
{txt}         22 {c |}{res}      6,381        0.17       29.34
{txt}         23 {c |}{res}      2,473        0.07       29.41
{txt}         24 {c |}{res}     28,546        0.76       30.17
{txt}         25 {c |}{res}     15,654        0.42       30.58
{txt}         26 {c |}{res}     39,234        1.04       31.62
{txt}         27 {c |}{res}      3,038        0.08       31.71
{txt}         28 {c |}{res}     18,485        0.49       32.20
{txt}         29 {c |}{res}      2,330        0.06       32.26
{txt}         30 {c |}{res}     39,760        1.06       33.31
{txt}         31 {c |}{res}      1,730        0.05       33.36
{txt}         32 {c |}{res}     28,107        0.75       34.11
{txt}         33 {c |}{res}      3,011        0.08       34.19
{txt}         34 {c |}{res}      5,824        0.15       34.34
{txt}         35 {c |}{res}     13,671        0.36       34.70
{txt}         36 {c |}{res}     46,243        1.23       35.93
{txt}         37 {c |}{res}      5,169        0.14       36.07
{txt}         38 {c |}{res}     12,776        0.34       36.41
{txt}         39 {c |}{res}      6,766        0.18       36.59
{txt}         40 {c |}{res}    106,297        2.82       39.41
{txt}         41 {c |}{res}      3,955        0.11       39.52
{txt}         42 {c |}{res}     23,131        0.61       40.13
{txt}         43 {c |}{res}      6,370        0.17       40.30
{txt}         44 {c |}{res}     28,590        0.76       41.06
{txt}         45 {c |}{res}     29,973        0.80       41.85
{txt}         46 {c |}{res}     23,751        0.63       42.48
{txt}         47 {c |}{res}     13,186        0.35       42.83
{txt}         48 {c |}{res}    125,095        3.32       46.16
{txt}         49 {c |}{res}     28,893        0.77       46.92
{txt}         50 {c |}{res}    147,852        3.93       50.85
{txt}         51 {c |}{res}     38,154        1.01       51.86
{txt}         52 {c |}{res}  1,812,754       48.14      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}  3,765,832      100.00

{com}. tab wkhp

 {txt}usual hours {c |}
  worked per {c |}
        week {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
         n/a {c |}{res}  1,151,851       20.37       20.37
{txt}           1 {c |}{res}      3,099        0.05       20.42
{txt}           2 {c |}{res}      6,619        0.12       20.54
{txt}           3 {c |}{res}      7,558        0.13       20.68
{txt}           4 {c |}{res}     14,250        0.25       20.93
{txt}           5 {c |}{res}     12,759        0.23       21.15
{txt}           6 {c |}{res}     13,997        0.25       21.40
{txt}           7 {c |}{res}      5,764        0.10       21.50
{txt}           8 {c |}{res}     28,509        0.50       22.01
{txt}           9 {c |}{res}      5,410        0.10       22.10
{txt}          10 {c |}{res}     52,865        0.93       23.04
{txt}          11 {c |}{res}      2,674        0.05       23.08
{txt}          12 {c |}{res}     33,604        0.59       23.68
{txt}          13 {c |}{res}      3,790        0.07       23.75
{txt}          14 {c |}{res}      6,544        0.12       23.86
{txt}          15 {c |}{res}     63,919        1.13       24.99
{txt}          16 {c |}{res}     29,152        0.52       25.51
{txt}          17 {c |}{res}      4,515        0.08       25.59
{txt}          18 {c |}{res}     16,584        0.29       25.88
{txt}          19 {c |}{res}      2,725        0.05       25.93
{txt}          20 {c |}{res}    196,563        3.48       29.40
{txt}          21 {c |}{res}      5,047        0.09       29.49
{txt}          22 {c |}{res}      7,810        0.14       29.63
{txt}          23 {c |}{res}      5,631        0.10       29.73
{txt}          24 {c |}{res}     41,337        0.73       30.46
{txt}          25 {c |}{res}     98,079        1.73       32.20
{txt}          26 {c |}{res}      5,861        0.10       32.30
{txt}          27 {c |}{res}      6,660        0.12       32.42
{txt}          28 {c |}{res}     17,157        0.30       32.72
{txt}          29 {c |}{res}      2,564        0.05       32.77
{txt}          30 {c |}{res}    201,761        3.57       36.34
{txt}          31 {c |}{res}      1,986        0.04       36.37
{txt}          32 {c |}{res}     62,505        1.11       37.48
{txt}          33 {c |}{res}      8,316        0.15       37.62
{txt}          34 {c |}{res}      7,677        0.14       37.76
{txt}          35 {c |}{res}    146,438        2.59       40.35
{txt}          36 {c |}{res}     50,193        0.89       41.24
{txt}          37 {c |}{res}     32,116        0.57       41.80
{txt}          38 {c |}{res}     55,449        0.98       42.78
{txt}          39 {c |}{res}      8,134        0.14       42.93
{txt}          40 {c |}{res}  1,958,328       34.63       77.56
{txt}          41 {c |}{res}      6,171        0.11       77.67
{txt}          42 {c |}{res}     41,307        0.73       78.40
{txt}          43 {c |}{res}     19,438        0.34       78.74
{txt}          44 {c |}{res}     21,249        0.38       79.12
{txt}          45 {c |}{res}    258,987        4.58       83.70
{txt}          46 {c |}{res}     12,852        0.23       83.93
{txt}          47 {c |}{res}      8,598        0.15       84.08
{txt}          48 {c |}{res}     66,386        1.17       85.25
{txt}          49 {c |}{res}      3,653        0.06       85.32
{txt}          50 {c |}{res}    383,648        6.78       92.10
{txt}          51 {c |}{res}      1,476        0.03       92.13
{txt}          52 {c |}{res}     15,261        0.27       92.40
{txt}          53 {c |}{res}      3,985        0.07       92.47
{txt}          54 {c |}{res}      5,230        0.09       92.56
{txt}          55 {c |}{res}     84,052        1.49       94.05
{txt}          56 {c |}{res}     10,465        0.19       94.23
{txt}          57 {c |}{res}      1,831        0.03       94.27
{txt}          58 {c |}{res}      4,458        0.08       94.34
{txt}          59 {c |}{res}        542        0.01       94.35
{txt}          60 {c |}{res}    184,546        3.26       97.62
{txt}          61 {c |}{res}        278        0.00       97.62
{txt}          62 {c |}{res}      1,494        0.03       97.65
{txt}          63 {c |}{res}      1,252        0.02       97.67
{txt}          64 {c |}{res}      1,481        0.03       97.70
{txt}          65 {c |}{res}     25,784        0.46       98.15
{txt}          66 {c |}{res}      1,512        0.03       98.18
{txt}          67 {c |}{res}        497        0.01       98.19
{txt}          68 {c |}{res}      1,607        0.03       98.22
{txt}          69 {c |}{res}        265        0.00       98.22
{txt}          70 {c |}{res}     38,464        0.68       98.90
{txt}          71 {c |}{res}         97        0.00       98.90
{txt}          72 {c |}{res}      7,508        0.13       99.04
{txt}          73 {c |}{res}        230        0.00       99.04
{txt}          74 {c |}{res}        285        0.01       99.05
{txt}          75 {c |}{res}      6,834        0.12       99.17
{txt}          76 {c |}{res}        402        0.01       99.17
{txt}          77 {c |}{res}        522        0.01       99.18
{txt}          78 {c |}{res}        641        0.01       99.19
{txt}          79 {c |}{res}         69        0.00       99.19
{txt}          80 {c |}{res}     23,112        0.41       99.60
{txt}          81 {c |}{res}         78        0.00       99.60
{txt}          82 {c |}{res}        271        0.00       99.61
{txt}          83 {c |}{res}         99        0.00       99.61
{txt}          84 {c |}{res}      5,688        0.10       99.71
{txt}          85 {c |}{res}      1,520        0.03       99.74
{txt}          86 {c |}{res}        243        0.00       99.74
{txt}          87 {c |}{res}         97        0.00       99.75
{txt}          88 {c |}{res}        321        0.01       99.75
{txt}          89 {c |}{res}         61        0.00       99.75
{txt}          90 {c |}{res}      3,802        0.07       99.82
{txt}          91 {c |}{res}        195        0.00       99.82
{txt}          92 {c |}{res}        113        0.00       99.82
{txt}          93 {c |}{res}         29        0.00       99.82
{txt}          94 {c |}{res}         89        0.00       99.83
{txt}          95 {c |}{res}        359        0.01       99.83
{txt}          96 {c |}{res}        792        0.01       99.85
{txt}          97 {c |}{res}         17        0.00       99.85
{txt}          98 {c |}{res}        708        0.01       99.86
{txt}99 (topcode) {c |}{res}      7,933        0.14      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}  5,654,684      100.00

{com}. tab empstat

 {txt}employment status {c |}
 [general version] {c |}      Freq.     Percent        Cum.
{hline 19}{c +}{hline 35}
          employed {c |}{res}  4,015,830       71.02       71.02
{txt}        unemployed {c |}{res}    253,849        4.49       75.51
{txt}not in labor force {c |}{res}  1,385,005       24.49      100.00
{txt}{hline 19}{c +}{hline 35}
             Total {c |}{res}  5,654,684      100.00

{com}. codebook wkw

{txt}{hline}
{res}wkw{right:weeks worked last year}
{txt}{hline}

{col 19}Type: Numeric ({res}byte{txt})

{col 18}Range: [{res}0{txt},{res}52{txt}]{col 55}Units: {res}1
{col 10}{txt}Unique values: {res}53{col 51}{txt}Missing .: {res}1,888,852{txt}/{res}5,654,684

{txt}{col 19}Mean: {res}{ralign 7:35.3333}
{txt}{col 14}Std. dev.: {res}{ralign 7:21.6534}

{txt}{col 12}Percentiles: {col 25}{ralign 7:10%}{ralign 10:25%}{ralign 10:50%}{ralign 10:75%}{ralign 10:90%}
{res}{col 25}{ralign 7:0}{ralign 10:      12}{ralign 10:      50}{ralign 10:      52}{ralign 10:      52}

{com}. codebook wkhp

{txt}{hline}
{res}wkhp{right:usual hours worked per week}
{txt}{hline}

{col 19}Type: Numeric ({res}byte{txt})
{ralign 22:Label}: {res:UHRSWORK}, but {res:98} nonmissing values are not labeled

{col 18}Range: [{res}0{txt},{res}99{txt}]{col 55}Units: {res}1
{col 10}{txt}Unique values: {res}100{col 51}{txt}Missing .: {res}0{txt}/{res}5,654,684

{txt}{ralign 23: Examples:}{col 25}{res}0{col 31}{txt}n/a
{ralign 23: }{col 25}{res}35{col 31}{txt}
{ralign 23: }{col 25}{res}40{col 31}{txt}
{ralign 23: }{col 25}{res}45{col 31}{txt}

{com}. tab empstat

 {txt}employment status {c |}
 [general version] {c |}      Freq.     Percent        Cum.
{hline 19}{c +}{hline 35}
          employed {c |}{res}  4,015,830       71.02       71.02
{txt}        unemployed {c |}{res}    253,849        4.49       75.51
{txt}not in labor force {c |}{res}  1,385,005       24.49      100.00
{txt}{hline 19}{c +}{hline 35}
             Total {c |}{res}  5,654,684      100.00

{com}. tab empstat, nooab
{err}option {bf:nooab} not allowed
{txt}{search r(198), local:r(198);}

{com}. tab empstat, nolab

 {txt}employment {c |}
     status {c |}
   [general {c |}
   version] {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
          1 {c |}{res}  4,015,830       71.02       71.02
{txt}          2 {c |}{res}    253,849        4.49       75.51
{txt}          3 {c |}{res}  1,385,005       24.49      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}  5,654,684      100.00

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. 
. replace wkhp = . if wkhp == 0
{txt}(1,151,851 real changes made, 1,151,851 to missing)

{com}. gen labsup = wkw * wkhp
{txt}(2,654,151 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(766,901 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,887,250 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(766,901 real changes made)

{com}. 
. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}.                 
.                 
.         * multiply sample weight (perwt) by afactor to map from PUMA's to CZ
.         
.         gen pop_weight = perwt * afactor 
{txt}
{com}.         gen weight = pop_weight * labsup
{txt}
{com}.         
.         * population by czone
.         bys czone: egen pop_cz = sum(pop_weight) 
{txt}
{com}. 
. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [aw=weight] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}.   
. 
. * Gen variable of year for merge and save temp file
. gen yr = 2000
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
. 
.         use raw_data/workfile_china.dta, replace
{txt}
{com}.         merge 1:1 czone yr using `temp'
{res}{txt}{p 0 7 2}
(variable
{bf:yr} was {bf:int}, now {bf:float} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             741
{txt}{col 9}from master{col 30}{res}             722{txt}  (_merge==1)
{col 9}from using{col 30}{res}              19{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             722{txt}  (_merge==3)
{col 5}{hline 41}

{com}.         
.         
. * this rename command help us in the loops code
. rename (d_sh_empl_mfg d_sh_empl_nmfg l_sh_empl_mfg l_sh_empl_nmfg pop_cz lnchg_popworkage ) (d_sh_mfg d_sh_nmfg l_sh_mfg l_sh_nmfg pop_1664 d_sh_lnpop)
{res}{txt}
{com}. gen nmfg = empl - mfg
{txt}(722 missing values generated)

{com}. 
. * gen log popcount changes for working age population
. gen sh_lnpop = ln(pop_1664)*100
{txt}(722 missing values generated)

{com}. gen l_sh_lnpop = ln(l_popcount)*100
{txt}(19 missing values generated)

{com}. 
. * here we create the outcomes as shares of the working pop
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. gen sh_`var' = 100*(`var'/pop_1664) 
{txt}  3{com}. {c )-}       
{txt}(722 missing values generated)
(722 missing values generated)
(722 missing values generated)
(722 missing values generated)

{com}. 
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. 
.         gen d_sh_`var'_2007 = (10/(2007-2000)) * (sh_`var' - l_sh_`var' ) if yr == 2000
{txt}  3{com}.         replace d_sh_`var'_2007 = d_sh_`var' if yr == 1990 
{txt}  4{com}. 
. {c )-}
{txt}(741 missing values generated)
(722 real changes made)
(741 missing values generated)
(722 real changes made)
(741 missing values generated)
(722 real changes made)
(741 missing values generated)
(722 real changes made)

{com}. 
. 
. ivregress 2sls d_sh_mfg (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48]
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   1066.82
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.3429
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         d_sh_mfg{col 19}{c |} Coefficient{col 31}  Std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-.5963601{col 31}{space 2}  .053969{col 42}{space 1}  -11.05{col 51}{space 3}0.000{col 59}{space 4}-.7021374{col 72}{space 3}-.4905828
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0402193{col 31}{space 2} .0090807{col 42}{space 1}   -4.43{col 51}{space 3}0.000{col 59}{space 4}-.0580173{col 72}{space 3}-.0224214
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}   .01314{col 31}{space 2} .0097178{col 42}{space 1}    1.35{col 51}{space 3}0.176{col 59}{space 4}-.0059066{col 72}{space 3} .0321867
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0303784{col 31}{space 2} .0063475{col 42}{space 1}    4.79{col 51}{space 3}0.000{col 59}{space 4} .0179374{col 72}{space 3} .0428193
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.0058603{col 31}{space 2} .0130735{col 42}{space 1}   -0.45{col 51}{space 3}0.654{col 59}{space 4}-.0314839{col 72}{space 3} .0197633
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.2448902{col 31}{space 2} .0255815{col 42}{space 1}   -9.57{col 51}{space 3}0.000{col 59}{space 4}-.2950291{col 72}{space 3}-.1947513
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}-.0590307{col 31}{space 2} .1750538{col 42}{space 1}   -0.34{col 51}{space 3}0.736{col 59}{space 4}-.4021297{col 72}{space 3} .2840684
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .3129508{col 31}{space 2} .2040157{col 42}{space 1}    1.53{col 51}{space 3}0.125{col 59}{space 4}-.0869127{col 72}{space 3} .7128143
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2} 1.260668{col 31}{space 2} .2040371{col 42}{space 1}    6.18{col 51}{space 3}0.000{col 59}{space 4} .8607626{col 72}{space 3} 1.660573
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.623558{col 31}{space 2} .2207413{col 42}{space 1}    7.36{col 51}{space 3}0.000{col 59}{space 4} 1.190913{col 72}{space 3} 2.056203
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2882165{col 31}{space 2}  .194934{col 42}{space 1}   -1.48{col 51}{space 3}0.139{col 59}{space 4}-.6702801{col 72}{space 3} .0938471
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.076234{col 31}{space 2} .2511617{col 42}{space 1}    4.29{col 51}{space 3}0.000{col 59}{space 4}  .583966{col 72}{space 3} 1.568502
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} .7316363{col 31}{space 2} .2185786{col 42}{space 1}    3.35{col 51}{space 3}0.001{col 59}{space 4} .3032302{col 72}{space 3} 1.160042
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4021016{col 31}{space 2} .2365104{col 42}{space 1}    1.70{col 51}{space 3}0.089{col 59}{space 4}-.0614502{col 72}{space 3} .8656534
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}  .026829{col 31}{space 2} .2140817{col 42}{space 1}    0.13{col 51}{space 3}0.900{col 59}{space 4}-.3927635{col 72}{space 3} .4464215
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-.2424246{col 31}{space 2} .1392663{col 42}{space 1}   -1.74{col 51}{space 3}0.082{col 59}{space 4}-.5153815{col 72}{space 3} .0305324
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 6.278516{col 31}{space 2} 1.098145{col 42}{space 1}    5.72{col 51}{space 3}0.000{col 59}{space 4} 4.126191{col 72}{space 3} 8.430841
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
. ivregress 2sls d_sh_mfg_2007 (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48]
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   5704.81
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.7863
{txt}{col 51}Root MSE{col 67}=    {res} 3.6197

{txt}{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}    d_sh_mfg_2007{col 19}{c |} Coefficient{col 31}  Std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-1.855894{col 31}{space 2} .1381083{col 42}{space 1}  -13.44{col 51}{space 3}0.000{col 59}{space 4}-2.126581{col 72}{space 3}-1.585206
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0591431{col 31}{space 2} .0232379{col 42}{space 1}   -2.55{col 51}{space 3}0.011{col 59}{space 4}-.1046885{col 72}{space 3}-.0135976
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2} .1112182{col 31}{space 2} .0248683{col 42}{space 1}    4.47{col 51}{space 3}0.000{col 59}{space 4} .0624773{col 72}{space 3} .1599591
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0776111{col 31}{space 2} .0162435{col 42}{space 1}    4.78{col 51}{space 3}0.000{col 59}{space 4} .0457744{col 72}{space 3} .1094479
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.2163785{col 31}{space 2} .0334555{col 42}{space 1}   -6.47{col 51}{space 3}0.000{col 59}{space 4}  -.28195{col 72}{space 3} -.150807
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.5317857{col 31}{space 2} .0654639{col 42}{space 1}   -8.12{col 51}{space 3}0.000{col 59}{space 4}-.6600927{col 72}{space 3}-.4034788
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}  1.24895{col 31}{space 2} .4479679{col 42}{space 1}    2.79{col 51}{space 3}0.005{col 59}{space 4} .3709496{col 72}{space 3} 2.126951
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2}-.5998699{col 31}{space 2} .5220824{col 42}{space 1}   -1.15{col 51}{space 3}0.251{col 59}{space 4}-1.623133{col 72}{space 3} .4233928
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2}-1.413642{col 31}{space 2} .5221371{col 42}{space 1}   -2.71{col 51}{space 3}0.007{col 59}{space 4}-2.437012{col 72}{space 3}-.3902719
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} .2513915{col 31}{space 2} .5648837{col 42}{space 1}    0.45{col 51}{space 3}0.656{col 59}{space 4}-.8557602{col 72}{space 3} 1.358543
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.3879733{col 31}{space 2} .4988419{col 42}{space 1}   -0.78{col 51}{space 3}0.437{col 59}{space 4}-1.365686{col 72}{space 3} .5897389
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} .4699453{col 31}{space 2} .6427302{col 42}{space 1}    0.73{col 51}{space 3}0.465{col 59}{space 4}-.7897827{col 72}{space 3} 1.729673
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2}-.7643031{col 31}{space 2} .5593491{col 42}{space 1}   -1.37{col 51}{space 3}0.172{col 59}{space 4}-1.860607{col 72}{space 3}  .332001
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2}-.3478803{col 31}{space 2} .6052371{col 42}{space 1}   -0.57{col 51}{space 3}0.565{col 59}{space 4}-1.534123{col 72}{space 3} .8383626
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}-2.511754{col 31}{space 2} .5478416{col 42}{space 1}   -4.58{col 51}{space 3}0.000{col 59}{space 4}-3.585504{col 72}{space 3}-1.438004
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-11.06194{col 31}{space 2} .3563867{col 42}{space 1}  -31.04{col 51}{space 3}0.000{col 59}{space 4}-11.76045{col 72}{space 3}-10.36344
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 26.74715{col 31}{space 2} 2.810187{col 42}{space 1}    9.52{col 51}{space 3}0.000{col 59}{space 4} 21.23928{col 72}{space 3} 32.25501
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. replace wkhp = . if wkhp == 0
{txt}(1,151,851 real changes made, 1,151,851 to missing)

{com}. gen labsup = wkw * wkhp
{txt}(2,654,151 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(766,901 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,887,250 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(766,901 real changes made)

{com}. 
. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}.                 
.                 
.         * multiply sample weight (perwt) by afactor to map from PUMA's to CZ
.         
.         gen weight = perwt * labsup * afactor
{txt}
{com}.         
.         * population by czone
.         bys czone: egen pop_cz = sum(weight) 
{txt}
{com}. 
. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [aw=weight] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}.   
. 
. * Gen variable of year for merge and save temp file
. gen yr = 2000
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
.         use raw_data/workfile_china.dta, replace
{txt}
{com}.         merge 1:1 czone yr using `temp'
{res}{txt}{p 0 7 2}
(variable
{bf:yr} was {bf:int}, now {bf:float} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             741
{txt}{col 9}from master{col 30}{res}             722{txt}  (_merge==1)
{col 9}from using{col 30}{res}              19{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             722{txt}  (_merge==3)
{col 5}{hline 41}

{com}.         
.         
. * this rename command help us in the loops code
. rename (d_sh_empl_mfg d_sh_empl_nmfg l_sh_empl_mfg l_sh_empl_nmfg pop_cz lnchg_popworkage ) (d_sh_mfg d_sh_nmfg l_sh_mfg l_sh_nmfg pop_1664 d_sh_lnpop)
{res}{txt}
{com}. gen nmfg = empl - mfg
{txt}(722 missing values generated)

{com}. 
. * gen log popcount changes for working age population
. gen sh_lnpop = ln(pop_1664)*100
{txt}(722 missing values generated)

{com}. gen l_sh_lnpop = ln(l_popcount)*100
{txt}(19 missing values generated)

{com}. 
. * here we create the outcomes as shares of the working pop
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. gen sh_`var' = 100*(`var'/pop_1664) 
{txt}  3{com}. {c )-}       
{txt}(722 missing values generated)
(722 missing values generated)
(722 missing values generated)
(722 missing values generated)

{com}. 
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. 
.         gen d_sh_`var'_2007 = (10/(2007-2000)) * (sh_`var' - l_sh_`var' ) if yr == 2000
{txt}  3{com}.         replace d_sh_`var'_2007 = d_sh_`var' if yr == 1990 
{txt}  4{com}. 
. {c )-}
{txt}(741 missing values generated)
(722 real changes made)
(741 missing values generated)
(722 real changes made)
(741 missing values generated)
(722 real changes made)
(741 missing values generated)
(722 real changes made)

{com}. 
. 
. ivregress 2sls d_sh_mfg (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48]
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   1066.82
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.3429
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         d_sh_mfg{col 19}{c |} Coefficient{col 31}  Std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-.5963601{col 31}{space 2}  .053969{col 42}{space 1}  -11.05{col 51}{space 3}0.000{col 59}{space 4}-.7021374{col 72}{space 3}-.4905828
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0402193{col 31}{space 2} .0090807{col 42}{space 1}   -4.43{col 51}{space 3}0.000{col 59}{space 4}-.0580173{col 72}{space 3}-.0224214
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}   .01314{col 31}{space 2} .0097178{col 42}{space 1}    1.35{col 51}{space 3}0.176{col 59}{space 4}-.0059066{col 72}{space 3} .0321867
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0303784{col 31}{space 2} .0063475{col 42}{space 1}    4.79{col 51}{space 3}0.000{col 59}{space 4} .0179374{col 72}{space 3} .0428193
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.0058603{col 31}{space 2} .0130735{col 42}{space 1}   -0.45{col 51}{space 3}0.654{col 59}{space 4}-.0314839{col 72}{space 3} .0197633
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.2448902{col 31}{space 2} .0255815{col 42}{space 1}   -9.57{col 51}{space 3}0.000{col 59}{space 4}-.2950291{col 72}{space 3}-.1947513
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}-.0590307{col 31}{space 2} .1750538{col 42}{space 1}   -0.34{col 51}{space 3}0.736{col 59}{space 4}-.4021297{col 72}{space 3} .2840684
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .3129508{col 31}{space 2} .2040157{col 42}{space 1}    1.53{col 51}{space 3}0.125{col 59}{space 4}-.0869127{col 72}{space 3} .7128143
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2} 1.260668{col 31}{space 2} .2040371{col 42}{space 1}    6.18{col 51}{space 3}0.000{col 59}{space 4} .8607626{col 72}{space 3} 1.660573
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.623558{col 31}{space 2} .2207413{col 42}{space 1}    7.36{col 51}{space 3}0.000{col 59}{space 4} 1.190913{col 72}{space 3} 2.056203
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2882165{col 31}{space 2}  .194934{col 42}{space 1}   -1.48{col 51}{space 3}0.139{col 59}{space 4}-.6702801{col 72}{space 3} .0938471
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.076234{col 31}{space 2} .2511617{col 42}{space 1}    4.29{col 51}{space 3}0.000{col 59}{space 4}  .583966{col 72}{space 3} 1.568502
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} .7316363{col 31}{space 2} .2185786{col 42}{space 1}    3.35{col 51}{space 3}0.001{col 59}{space 4} .3032302{col 72}{space 3} 1.160042
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4021016{col 31}{space 2} .2365104{col 42}{space 1}    1.70{col 51}{space 3}0.089{col 59}{space 4}-.0614502{col 72}{space 3} .8656534
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}  .026829{col 31}{space 2} .2140817{col 42}{space 1}    0.13{col 51}{space 3}0.900{col 59}{space 4}-.3927635{col 72}{space 3} .4464215
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-.2424246{col 31}{space 2} .1392663{col 42}{space 1}   -1.74{col 51}{space 3}0.082{col 59}{space 4}-.5153815{col 72}{space 3} .0305324
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 6.278516{col 31}{space 2} 1.098145{col 42}{space 1}    5.72{col 51}{space 3}0.000{col 59}{space 4} 4.126191{col 72}{space 3} 8.430841
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
. ivregress 2sls d_sh_mfg_2007 (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48]
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   5758.32
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.7882
{txt}{col 51}Root MSE{col 67}=    {res} 3.6643

{txt}{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}    d_sh_mfg_2007{col 19}{c |} Coefficient{col 31}  Std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-1.869287{col 31}{space 2} .1398115{col 42}{space 1}  -13.37{col 51}{space 3}0.000{col 59}{space 4}-2.143312{col 72}{space 3}-1.595262
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0623917{col 31}{space 2} .0235245{col 42}{space 1}   -2.65{col 51}{space 3}0.008{col 59}{space 4}-.1084988{col 72}{space 3}-.0162846
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2} .1144652{col 31}{space 2} .0251749{col 42}{space 1}    4.55{col 51}{space 3}0.000{col 59}{space 4} .0651233{col 72}{space 3} .1638072
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0740507{col 31}{space 2} .0164439{col 42}{space 1}    4.50{col 51}{space 3}0.000{col 59}{space 4} .0418213{col 72}{space 3} .1062801
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.2320035{col 31}{space 2}  .033868{col 42}{space 1}   -6.85{col 51}{space 3}0.000{col 59}{space 4}-.2983837{col 72}{space 3}-.1656234
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.5276103{col 31}{space 2} .0662712{col 42}{space 1}   -7.96{col 51}{space 3}0.000{col 59}{space 4}-.6574995{col 72}{space 3} -.397721
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2} 1.406282{col 31}{space 2} .4534922{col 42}{space 1}    3.10{col 51}{space 3}0.002{col 59}{space 4} .5174534{col 72}{space 3}  2.29511
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2}-.6703786{col 31}{space 2} .5285207{col 42}{space 1}   -1.27{col 51}{space 3}0.205{col 59}{space 4} -1.70626{col 72}{space 3} .3655029
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2}-1.514931{col 31}{space 2} .5285761{col 42}{space 1}   -2.87{col 51}{space 3}0.004{col 59}{space 4}-2.550921{col 72}{space 3}-.4789405
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} .1204377{col 31}{space 2} .5718499{col 42}{space 1}    0.21{col 51}{space 3}0.833{col 59}{space 4}-1.000367{col 72}{space 3} 1.241243
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2} -.423262{col 31}{space 2} .5049937{col 42}{space 1}   -0.84{col 51}{space 3}0.402{col 59}{space 4}-1.413031{col 72}{space 3} .5665074
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} .3514575{col 31}{space 2} .6506564{col 42}{space 1}    0.54{col 51}{space 3}0.589{col 59}{space 4}-.9238056{col 72}{space 3} 1.626721
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2}-.8704517{col 31}{space 2}  .566247{col 42}{space 1}   -1.54{col 51}{space 3}0.124{col 59}{space 4}-1.980275{col 72}{space 3}  .239372
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2}-.4309002{col 31}{space 2} .6127009{col 42}{space 1}   -0.70{col 51}{space 3}0.482{col 59}{space 4}-1.631772{col 72}{space 3} .7699715
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2} -2.59576{col 31}{space 2} .5545976{col 42}{space 1}   -4.68{col 51}{space 3}0.000{col 59}{space 4}-3.682751{col 72}{space 3}-1.508768
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-11.24139{col 31}{space 2} .3607816{col 42}{space 1}  -31.16{col 51}{space 3}0.000{col 59}{space 4}-11.94851{col 72}{space 3}-10.53427
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 27.63137{col 31}{space 2} 2.844842{col 42}{space 1}    9.71{col 51}{space 3}0.000{col 59}{space 4} 22.05559{col 72}{space 3} 33.20716
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. gen labsup = wkw * wkhp
{txt}(1,888,852 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(351 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,888,501 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(351 real changes made)

{com}. 
. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}.                 
.                 
.         * multiply sample weight (perwt) by afactor to map from PUMA's to CZ
.         
.         gen weight = perwt * labsup * afactor
{txt}
{com}.         
.         * population by czone
.         bys czone: egen pop_cz = sum(weight) 
{txt}
{com}. 
. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [aw=weight] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}.   
. 
. * Gen variable of year for merge and save temp file
. gen yr = 2000
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
.         use raw_data/workfile_china.dta, replace
{txt}
{com}.         merge 1:1 czone yr using `temp'
{res}{txt}{p 0 7 2}
(variable
{bf:yr} was {bf:int}, now {bf:float} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             741
{txt}{col 9}from master{col 30}{res}             722{txt}  (_merge==1)
{col 9}from using{col 30}{res}              19{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             722{txt}  (_merge==3)
{col 5}{hline 41}

{com}.         
.         
. * this rename command help us in the loops code
. rename (d_sh_empl_mfg d_sh_empl_nmfg l_sh_empl_mfg l_sh_empl_nmfg pop_cz lnchg_popworkage ) (d_sh_mfg d_sh_nmfg l_sh_mfg l_sh_nmfg pop_1664 d_sh_lnpop)
{res}{txt}
{com}. gen nmfg = empl - mfg
{txt}(722 missing values generated)

{com}. 
. * gen log popcount changes for working age population
. gen sh_lnpop = ln(pop_1664)*100
{txt}(722 missing values generated)

{com}. gen l_sh_lnpop = ln(l_popcount)*100
{txt}(19 missing values generated)

{com}. 
. * here we create the outcomes as shares of the working pop
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. gen sh_`var' = 100*(`var'/pop_1664) 
{txt}  3{com}. {c )-}       
{txt}(722 missing values generated)
(722 missing values generated)
(722 missing values generated)
(722 missing values generated)

{com}. 
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. 
.         gen d_sh_`var'_2007 = (10/(2007-2000)) * (sh_`var' - l_sh_`var' ) if yr == 2000
{txt}  3{com}.         replace d_sh_`var'_2007 = d_sh_`var' if yr == 1990 
{txt}  4{com}. 
. {c )-}
{txt}(741 missing values generated)
(722 real changes made)
(741 missing values generated)
(722 real changes made)
(741 missing values generated)
(722 real changes made)
(741 missing values generated)
(722 real changes made)

{com}. 
. 
. ivregress 2sls d_sh_mfg (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48]
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   1066.82
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.3429
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         d_sh_mfg{col 19}{c |} Coefficient{col 31}  Std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-.5963601{col 31}{space 2}  .053969{col 42}{space 1}  -11.05{col 51}{space 3}0.000{col 59}{space 4}-.7021374{col 72}{space 3}-.4905828
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0402193{col 31}{space 2} .0090807{col 42}{space 1}   -4.43{col 51}{space 3}0.000{col 59}{space 4}-.0580173{col 72}{space 3}-.0224214
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}   .01314{col 31}{space 2} .0097178{col 42}{space 1}    1.35{col 51}{space 3}0.176{col 59}{space 4}-.0059066{col 72}{space 3} .0321867
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0303784{col 31}{space 2} .0063475{col 42}{space 1}    4.79{col 51}{space 3}0.000{col 59}{space 4} .0179374{col 72}{space 3} .0428193
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.0058603{col 31}{space 2} .0130735{col 42}{space 1}   -0.45{col 51}{space 3}0.654{col 59}{space 4}-.0314839{col 72}{space 3} .0197633
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.2448902{col 31}{space 2} .0255815{col 42}{space 1}   -9.57{col 51}{space 3}0.000{col 59}{space 4}-.2950291{col 72}{space 3}-.1947513
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}-.0590307{col 31}{space 2} .1750538{col 42}{space 1}   -0.34{col 51}{space 3}0.736{col 59}{space 4}-.4021297{col 72}{space 3} .2840684
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .3129508{col 31}{space 2} .2040157{col 42}{space 1}    1.53{col 51}{space 3}0.125{col 59}{space 4}-.0869127{col 72}{space 3} .7128143
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2} 1.260668{col 31}{space 2} .2040371{col 42}{space 1}    6.18{col 51}{space 3}0.000{col 59}{space 4} .8607626{col 72}{space 3} 1.660573
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.623558{col 31}{space 2} .2207413{col 42}{space 1}    7.36{col 51}{space 3}0.000{col 59}{space 4} 1.190913{col 72}{space 3} 2.056203
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2882165{col 31}{space 2}  .194934{col 42}{space 1}   -1.48{col 51}{space 3}0.139{col 59}{space 4}-.6702801{col 72}{space 3} .0938471
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.076234{col 31}{space 2} .2511617{col 42}{space 1}    4.29{col 51}{space 3}0.000{col 59}{space 4}  .583966{col 72}{space 3} 1.568502
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} .7316363{col 31}{space 2} .2185786{col 42}{space 1}    3.35{col 51}{space 3}0.001{col 59}{space 4} .3032302{col 72}{space 3} 1.160042
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4021016{col 31}{space 2} .2365104{col 42}{space 1}    1.70{col 51}{space 3}0.089{col 59}{space 4}-.0614502{col 72}{space 3} .8656534
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}  .026829{col 31}{space 2} .2140817{col 42}{space 1}    0.13{col 51}{space 3}0.900{col 59}{space 4}-.3927635{col 72}{space 3} .4464215
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-.2424246{col 31}{space 2} .1392663{col 42}{space 1}   -1.74{col 51}{space 3}0.082{col 59}{space 4}-.5153815{col 72}{space 3} .0305324
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 6.278516{col 31}{space 2} 1.098145{col 42}{space 1}    5.72{col 51}{space 3}0.000{col 59}{space 4} 4.126191{col 72}{space 3} 8.430841
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
. ivregress 2sls d_sh_mfg_2007 (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48]
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   5758.31
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.7882
{txt}{col 51}Root MSE{col 67}=    {res} 3.6643

{txt}{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}    d_sh_mfg_2007{col 19}{c |} Coefficient{col 31}  Std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-1.869284{col 31}{space 2} .1398112{col 42}{space 1}  -13.37{col 51}{space 3}0.000{col 59}{space 4}-2.143309{col 72}{space 3}-1.595259
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0623914{col 31}{space 2} .0235244{col 42}{space 1}   -2.65{col 51}{space 3}0.008{col 59}{space 4}-.1084984{col 72}{space 3}-.0162844
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2} .1144649{col 31}{space 2} .0251749{col 42}{space 1}    4.55{col 51}{space 3}0.000{col 59}{space 4}  .065123{col 72}{space 3} .1638068
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0740508{col 31}{space 2} .0164438{col 42}{space 1}    4.50{col 51}{space 3}0.000{col 59}{space 4} .0418215{col 72}{space 3} .1062801
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.2320027{col 31}{space 2}  .033868{col 42}{space 1}   -6.85{col 51}{space 3}0.000{col 59}{space 4}-.2983828{col 72}{space 3}-.1656227
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.5276099{col 31}{space 2} .0662711{col 42}{space 1}   -7.96{col 51}{space 3}0.000{col 59}{space 4}-.6574989{col 72}{space 3}-.3977209
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2} 1.406265{col 31}{space 2} .4534914{col 42}{space 1}    3.10{col 51}{space 3}0.002{col 59}{space 4} .5174387{col 72}{space 3} 2.295092
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2}-.6703733{col 31}{space 2} .5285198{col 42}{space 1}   -1.27{col 51}{space 3}0.205{col 59}{space 4}-1.706253{col 72}{space 3} .3655064
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2}-1.514923{col 31}{space 2} .5285752{col 42}{space 1}   -2.87{col 51}{space 3}0.004{col 59}{space 4}-2.550911{col 72}{space 3}-.4789346
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} .1204461{col 31}{space 2} .5718489{col 42}{space 1}    0.21{col 51}{space 3}0.833{col 59}{space 4}-1.000357{col 72}{space 3} 1.241249
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.4232587{col 31}{space 2} .5049928{col 42}{space 1}   -0.84{col 51}{space 3}0.402{col 59}{space 4}-1.413026{col 72}{space 3}  .566509
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} .3514689{col 31}{space 2} .6506552{col 42}{space 1}    0.54{col 51}{space 3}0.589{col 59}{space 4}-.9237919{col 72}{space 3}  1.62673
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2}-.8704435{col 31}{space 2}  .566246{col 42}{space 1}   -1.54{col 51}{space 3}0.124{col 59}{space 4}-1.980265{col 72}{space 3} .2393782
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2}-.4308932{col 31}{space 2} .6126998{col 42}{space 1}   -0.70{col 51}{space 3}0.482{col 59}{space 4}-1.631763{col 72}{space 3} .7699764
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}-2.595751{col 31}{space 2} .5545966{col 42}{space 1}   -4.68{col 51}{space 3}0.000{col 59}{space 4} -3.68274{col 72}{space 3}-1.508761
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-11.24137{col 31}{space 2}  .360781{col 42}{space 1}  -31.16{col 51}{space 3}0.000{col 59}{space 4}-11.94849{col 72}{space 3}-10.53425
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 27.63131{col 31}{space 2} 2.844837{col 42}{space 1}    9.71{col 51}{space 3}0.000{col 59}{space 4} 22.05553{col 72}{space 3} 33.20709
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. ivregress 2sls d_sh_mfg (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48], cluster(statefip)
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}    702.76
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.3429
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{ralign 83:(Std. err. adjusted for {res:48} clusters in {res:statefip})}
{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 19}{c |}{col 31}    Robust
{col 1}         d_sh_mfg{col 19}{c |} Coefficient{col 31}  std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-.5963601{col 31}{space 2} .0987739{col 42}{space 1}   -6.04{col 51}{space 3}0.000{col 59}{space 4}-.7899533{col 72}{space 3}-.4027668
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0402193{col 31}{space 2} .0131419{col 42}{space 1}   -3.06{col 51}{space 3}0.002{col 59}{space 4} -.065977{col 72}{space 3}-.0144616
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}   .01314{col 31}{space 2} .0121955{col 42}{space 1}    1.08{col 51}{space 3}0.281{col 59}{space 4}-.0107627{col 72}{space 3} .0370428
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0303784{col 31}{space 2} .0108416{col 42}{space 1}    2.80{col 51}{space 3}0.005{col 59}{space 4} .0091292{col 72}{space 3} .0516275
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.0058603{col 31}{space 2} .0244685{col 42}{space 1}   -0.24{col 51}{space 3}0.811{col 59}{space 4}-.0538176{col 72}{space 3}  .042097
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.2448902{col 31}{space 2} .0637471{col 42}{space 1}   -3.84{col 51}{space 3}0.000{col 59}{space 4}-.3698322{col 72}{space 3}-.1199483
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}-.0590307{col 31}{space 2} .2369742{col 42}{space 1}   -0.25{col 51}{space 3}0.803{col 59}{space 4}-.5234916{col 72}{space 3} .4054303
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .3129508{col 31}{space 2}  .281184{col 42}{space 1}    1.11{col 51}{space 3}0.266{col 59}{space 4}-.2381598{col 72}{space 3} .8640614
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2} 1.260668{col 31}{space 2} .3370428{col 42}{space 1}    3.74{col 51}{space 3}0.000{col 59}{space 4} .6000762{col 72}{space 3}  1.92126
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.623558{col 31}{space 2}  .372155{col 42}{space 1}    4.36{col 51}{space 3}0.000{col 59}{space 4} .8941478{col 72}{space 3} 2.352969
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2882165{col 31}{space 2} .2336567{col 42}{space 1}   -1.23{col 51}{space 3}0.217{col 59}{space 4}-.7461752{col 72}{space 3} .1697421
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.076234{col 31}{space 2} .3346871{col 42}{space 1}    3.22{col 51}{space 3}0.001{col 59}{space 4} .4202592{col 72}{space 3} 1.732208
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} .7316363{col 31}{space 2}   .23137{col 42}{space 1}    3.16{col 51}{space 3}0.002{col 59}{space 4} .2781593{col 72}{space 3} 1.185113
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4021016{col 31}{space 2} .2573061{col 42}{space 1}    1.56{col 51}{space 3}0.118{col 59}{space 4} -.102209{col 72}{space 3} .9064122
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}  .026829{col 31}{space 2} .1911116{col 42}{space 1}    0.14{col 51}{space 3}0.888{col 59}{space 4}-.3477427{col 72}{space 3} .4014008
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-.2424246{col 31}{space 2} .4005703{col 42}{space 1}   -0.61{col 51}{space 3}0.545{col 59}{space 4}-1.027528{col 72}{space 3} .5426788
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 6.278516{col 31}{space 2} 1.937265{col 42}{space 1}    3.24{col 51}{space 3}0.001{col 59}{space 4} 2.481547{col 72}{space 3} 10.07548
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. ivregress 2sls d_sh_mfg_2007 (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48], cluster(statefip)
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   1586.61
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.7882
{txt}{col 51}Root MSE{col 67}=    {res} 3.6643

{txt}{ralign 83:(Std. err. adjusted for {res:48} clusters in {res:statefip})}
{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 19}{c |}{col 31}    Robust
{col 1}    d_sh_mfg_2007{col 19}{c |} Coefficient{col 31}  std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-1.869284{col 31}{space 2} .3422654{col 42}{space 1}   -5.46{col 51}{space 3}0.000{col 59}{space 4}-2.540112{col 72}{space 3}-1.198456
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0623914{col 31}{space 2} .0380254{col 42}{space 1}   -1.64{col 51}{space 3}0.101{col 59}{space 4}-.1369198{col 72}{space 3}  .012137
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2} .1144649{col 31}{space 2} .0386987{col 42}{space 1}    2.96{col 51}{space 3}0.003{col 59}{space 4} .0386168{col 72}{space 3}  .190313
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0740508{col 31}{space 2} .0182052{col 42}{space 1}    4.07{col 51}{space 3}0.000{col 59}{space 4} .0383694{col 72}{space 3} .1097323
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.2320027{col 31}{space 2} .0458204{col 42}{space 1}   -5.06{col 51}{space 3}0.000{col 59}{space 4} -.321809{col 72}{space 3}-.1421965
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.5276099{col 31}{space 2}  .125444{col 42}{space 1}   -4.21{col 51}{space 3}0.000{col 59}{space 4}-.7734756{col 72}{space 3}-.2817443
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2} 1.406265{col 31}{space 2}  .675303{col 42}{space 1}    2.08{col 51}{space 3}0.037{col 59}{space 4} .0826959{col 72}{space 3} 2.729835
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2}-.6703733{col 31}{space 2} .6569492{col 42}{space 1}   -1.02{col 51}{space 3}0.308{col 59}{space 4} -1.95797{col 72}{space 3} .6172235
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2}-1.514923{col 31}{space 2} .7620328{col 42}{space 1}   -1.99{col 51}{space 3}0.047{col 59}{space 4} -3.00848{col 72}{space 3}-.0213661
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} .1204461{col 31}{space 2}  .553461{col 42}{space 1}    0.22{col 51}{space 3}0.828{col 59}{space 4}-.9643174{col 72}{space 3}  1.20521
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.4232587{col 31}{space 2} .5921758{col 42}{space 1}   -0.71{col 51}{space 3}0.475{col 59}{space 4}-1.583902{col 72}{space 3} .7373846
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} .3514689{col 31}{space 2} .7988035{col 42}{space 1}    0.44{col 51}{space 3}0.660{col 59}{space 4}-1.214157{col 72}{space 3} 1.917095
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2}-.8704435{col 31}{space 2} .6271127{col 42}{space 1}   -1.39{col 51}{space 3}0.165{col 59}{space 4}-2.099562{col 72}{space 3} .3586749
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2}-.4308932{col 31}{space 2} .6275653{col 42}{space 1}   -0.69{col 51}{space 3}0.492{col 59}{space 4}-1.660899{col 72}{space 3} .7991123
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}-2.595751{col 31}{space 2} .6102621{col 42}{space 1}   -4.25{col 51}{space 3}0.000{col 59}{space 4}-3.791843{col 72}{space 3}-1.399659
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-11.24137{col 31}{space 2} 1.169863{col 42}{space 1}   -9.61{col 51}{space 3}0.000{col 59}{space 4}-13.53426{col 72}{space 3} -8.94848
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 27.63131{col 31}{space 2} 4.975846{col 42}{space 1}    5.55{col 51}{space 3}0.000{col 59}{space 4} 17.87883{col 72}{space 3} 37.38379
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. gen labsup = wkw * wkhp
{txt}(1,888,852 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(351 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,888,501 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(351 real changes made)

{com}. 
{txt}end of do-file

{com}. codebool labsup
{err}command {bf}codebool{sf} is unrecognized
{txt}{search r(199), local:r(199);}

{com}. codebook labsup

{txt}{hline}
{res}labsup{right:(unlabeled)}
{txt}{hline}

{col 19}Type: Numeric ({res}float{txt})

{col 18}Range: [{res}0{txt},{res}5148{txt}]{col 55}Units: {res}1.000e-06
{col 10}{txt}Unique values: {res}5,607{col 51}{txt}Missing .: {res}0{txt}/{res}5,654,684

{txt}{col 19}Mean: {res}{ralign 7:1437.07}
{txt}{col 14}Std. dev.: {res}{ralign 7:935.934}

{txt}{col 12}Percentiles: {col 25}{ralign 7:10%}{ralign 10:25%}{ralign 10:50%}{ralign 10:75%}{ralign 10:90%}
{res}{col 25}{ralign 7:0}{ralign 10: 587.719}{ralign 10: 1689.45}{ralign 10:    2080}{ralign 10:    2350}

{com}. hist labsup
{txt}(bin={res}67{txt}, start={res}0{txt}, width={res}76.835821{txt})
{res}
{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}.                 
. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         save temp/test.dta, replace
{txt}{p 0 4 2}
(file {bf}
temp/test.dta{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
temp/test.dta{rm}
saved
{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         gen weight = perwt * labsup * afactor
{txt}
{com}. 
{txt}end of do-file

{com}. hist weight
{txt}(bin={res}69{txt}, start={res}0{txt}, width={res}64510.87{txt})
{res}
{com}. hist afactor
{txt}(bin={res}69{txt}, start={res}.006{txt}, width={res}.0144058{txt})
{res}
{com}. codebook afactor

{txt}{hline}
{res}afactor{right:fraction of puma pop in czone}
{txt}{hline}

{col 19}Type: Numeric ({res}double{txt})

{col 18}Range: [{res}.006{txt},{res}1{txt}]{col 55}Units: {res}.001
{col 10}{txt}Unique values: {res}673{col 51}{txt}Missing .: {res}0{txt}/{res}8,183,293

{txt}{col 19}Mean: {res}{ralign 7:.690767}
{txt}{col 14}Std. dev.: {res}{ralign 7:.376383}

{txt}{col 12}Percentiles: {col 25}{ralign 7:10%}{ralign 10:25%}{ralign 10:50%}{ralign 10:75%}{ralign 10:90%}
{res}{col 25}{ralign 7:.105}{ralign 10:    .294}{ralign 10:       1}{ralign 10:       1}{ralign 10:       1}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         bys czone: egen pop_cz = sum(wt) 
{err}wt not found
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         gen wt = perwt * labsup * afactor
{txt}
{com}. 
{txt}end of do-file

{com}. drop weight

. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         bys czone: egen pop_cz = sum(wt) 
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [aw=wt] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. gen yr = 2000
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
.         use raw_data/workfile_china.dta, replace
{txt}
{com}.         merge 1:1 czone yr using `temp'
{res}{txt}{p 0 7 2}
(variable
{bf:yr} was {bf:int}, now {bf:float} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             741
{txt}{col 9}from master{col 30}{res}             722{txt}  (_merge==1)
{col 9}from using{col 30}{res}              19{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             722{txt}  (_merge==3)
{col 5}{hline 41}

{com}.         
. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         drop if _m == 2
{txt}(19 observations deleted)

{com}.         drop _m
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. rename (d_sh_empl_mfg d_sh_empl_nmfg l_sh_empl_mfg l_sh_empl_nmfg pop_cz lnchg_popworkage ) (d_sh_mfg d_sh_nmfg l_sh_mfg l_sh_nmfg pop_1664 d_sh_lnpop)
{res}{txt}
{com}. gen nmfg = empl - mfg
{txt}(722 missing values generated)

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. gen sh_lnpop = ln(pop_1664)*100
{txt}(722 missing values generated)

{com}. gen l_sh_lnpop = ln(l_popcount)*100
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. * here we create the outcomes as shares of the working pop
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. gen sh_`var' = 100*(`var'/pop_1664) 
{txt}  3{com}. {c )-}       
{txt}(722 missing values generated)
(722 missing values generated)
(722 missing values generated)
(722 missing values generated)

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. 
.         gen d_sh_`var'_2007 = (10/(2007-2000)) * (sh_`var' - l_sh_`var' ) if yr == 2000
{txt}  3{com}.         replace d_sh_`var'_2007 = d_sh_`var' if yr == 1990 
{txt}  4{com}. 
. {c )-}
{txt}(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)

{com}. 
{txt}end of do-file

{com}. order d_sh_mfg_2007 d_sh_mfg d_sh_unempl_2007 d_sh_unempl

. clear

. set obs 10
{txt}{p}
Number of observations ({bf:_N}) was 0,
now 10.
{p_end}

{com}. gen x = 1

. gen wt = 1

. collapse (sum) x [aw=wt]
{res}
{com}. clear

. set obs 10
{txt}{p}
Number of observations ({bf:_N}) was 0,
now 10.
{p_end}

{com}. gen x = 1

. gen wt = 2

. collapse (sum) x [aw=wt[
{err}too few ')' or ']'
{txt}{search r(132), local:r(132);}

{com}. collapse (sum) x [aw=wt]
{res}
{com}. clear

. set obs 10
{txt}{p}
Number of observations ({bf:_N}) was 0,
now 10.
{p_end}

{com}. gen x = 1

. gen wt = 2

. collapse (sum) x [iw=wt]
{res}
{com}. do "C:\Users\alove\Documents\GitHub\RUV\ADH\codes\test_regs.do"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)

{txt}end of do-file


{com}. use "C:\Users\alove\Documents\GitHub\RUV\ADH\temp\test.dta", clear

. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         gen wt = perwt * labsup * afactor
{txt}
{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}.         bys czone: egen pop_cz = sum(wt) 
{txt}
{com}. 
. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [iw=wt] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}.   
. 
. * Gen variable of year for merge and save temp file
. gen yr = 2000
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
.         use raw_data/workfile_china.dta, replace
{txt}
{com}.         merge 1:1 czone yr using `temp'
{res}{txt}{p 0 7 2}
(variable
{bf:yr} was {bf:int}, now {bf:float} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             741
{txt}{col 9}from master{col 30}{res}             722{txt}  (_merge==1)
{col 9}from using{col 30}{res}              19{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             722{txt}  (_merge==3)
{col 5}{hline 41}

{com}.         drop if _m == 2
{txt}(19 observations deleted)

{com}.         drop _m
{txt}
{com}.         
.         
. * this rename command help us in the loops code
. rename (d_sh_empl_mfg d_sh_empl_nmfg l_sh_empl_mfg l_sh_empl_nmfg pop_cz lnchg_popworkage ) (d_sh_mfg d_sh_nmfg l_sh_mfg l_sh_nmfg pop_1664 d_sh_lnpop)
{res}{txt}
{com}. gen nmfg = empl - mfg
{txt}(722 missing values generated)

{com}. 
. * gen log popcount changes for working age population
. gen sh_lnpop = ln(pop_1664)*100
{txt}(722 missing values generated)

{com}. gen l_sh_lnpop = ln(l_popcount)*100
{txt}
{com}. 
. * here we create the outcomes as shares of the working pop
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. gen sh_`var' = 100*(`var'/pop_1664) 
{txt}  3{com}. {c )-}       
{txt}(722 missing values generated)
(722 missing values generated)
(722 missing values generated)
(722 missing values generated)

{com}. 
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. 
.         gen d_sh_`var'_2007 = (10/(2007-2000)) * (sh_`var' - l_sh_`var' ) if yr == 2000
{txt}  3{com}.         replace d_sh_`var'_2007 = d_sh_`var' if yr == 1990 
{txt}  4{com}. 
. {c )-}
{txt}(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)

{com}. 
. 
. ivregress 2sls d_sh_mfg (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48], cluster(statefip)
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}    702.76
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.3429
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{ralign 83:(Std. err. adjusted for {res:48} clusters in {res:statefip})}
{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 19}{c |}{col 31}    Robust
{col 1}         d_sh_mfg{col 19}{c |} Coefficient{col 31}  std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-.5963601{col 31}{space 2} .0987739{col 42}{space 1}   -6.04{col 51}{space 3}0.000{col 59}{space 4}-.7899533{col 72}{space 3}-.4027668
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0402193{col 31}{space 2} .0131419{col 42}{space 1}   -3.06{col 51}{space 3}0.002{col 59}{space 4} -.065977{col 72}{space 3}-.0144616
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}   .01314{col 31}{space 2} .0121955{col 42}{space 1}    1.08{col 51}{space 3}0.281{col 59}{space 4}-.0107627{col 72}{space 3} .0370428
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0303784{col 31}{space 2} .0108416{col 42}{space 1}    2.80{col 51}{space 3}0.005{col 59}{space 4} .0091292{col 72}{space 3} .0516275
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.0058603{col 31}{space 2} .0244685{col 42}{space 1}   -0.24{col 51}{space 3}0.811{col 59}{space 4}-.0538176{col 72}{space 3}  .042097
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.2448902{col 31}{space 2} .0637471{col 42}{space 1}   -3.84{col 51}{space 3}0.000{col 59}{space 4}-.3698322{col 72}{space 3}-.1199483
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}-.0590307{col 31}{space 2} .2369742{col 42}{space 1}   -0.25{col 51}{space 3}0.803{col 59}{space 4}-.5234916{col 72}{space 3} .4054303
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .3129508{col 31}{space 2}  .281184{col 42}{space 1}    1.11{col 51}{space 3}0.266{col 59}{space 4}-.2381598{col 72}{space 3} .8640614
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2} 1.260668{col 31}{space 2} .3370428{col 42}{space 1}    3.74{col 51}{space 3}0.000{col 59}{space 4} .6000762{col 72}{space 3}  1.92126
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.623558{col 31}{space 2}  .372155{col 42}{space 1}    4.36{col 51}{space 3}0.000{col 59}{space 4} .8941478{col 72}{space 3} 2.352969
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2882165{col 31}{space 2} .2336567{col 42}{space 1}   -1.23{col 51}{space 3}0.217{col 59}{space 4}-.7461752{col 72}{space 3} .1697421
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.076234{col 31}{space 2} .3346871{col 42}{space 1}    3.22{col 51}{space 3}0.001{col 59}{space 4} .4202592{col 72}{space 3} 1.732208
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} .7316363{col 31}{space 2}   .23137{col 42}{space 1}    3.16{col 51}{space 3}0.002{col 59}{space 4} .2781593{col 72}{space 3} 1.185113
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4021016{col 31}{space 2} .2573061{col 42}{space 1}    1.56{col 51}{space 3}0.118{col 59}{space 4} -.102209{col 72}{space 3} .9064122
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}  .026829{col 31}{space 2} .1911116{col 42}{space 1}    0.14{col 51}{space 3}0.888{col 59}{space 4}-.3477427{col 72}{space 3} .4014008
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-.2424246{col 31}{space 2} .4005703{col 42}{space 1}   -0.61{col 51}{space 3}0.545{col 59}{space 4}-1.027528{col 72}{space 3} .5426788
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 6.278516{col 31}{space 2} 1.937265{col 42}{space 1}    3.24{col 51}{space 3}0.001{col 59}{space 4} 2.481547{col 72}{space 3} 10.07548
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
. ivregress 2sls d_sh_mfg_2007 (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48], cluster(statefip)
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   3538.64
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.7471
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{ralign 83:(Std. err. adjusted for {res:48} clusters in {res:statefip})}
{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 19}{c |}{col 31}    Robust
{col 1}    d_sh_mfg_2007{col 19}{c |} Coefficient{col 31}  std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2} .0248561{col 31}{space 2} .0723311{col 42}{space 1}    0.34{col 51}{space 3}0.731{col 59}{space 4}-.1169101{col 72}{space 3} .1666224
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0380613{col 31}{space 2} .0191181{col 42}{space 1}   -1.99{col 51}{space 3}0.046{col 59}{space 4}-.0755321{col 72}{space 3}-.0005905
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}-.0151151{col 31}{space 2} .0121956{col 42}{space 1}   -1.24{col 51}{space 3}0.215{col 59}{space 4}-.0390181{col 72}{space 3} .0087878
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2}-.0071024{col 31}{space 2} .0105908{col 42}{space 1}   -0.67{col 51}{space 3}0.502{col 59}{space 4}  -.02786{col 72}{space 3} .0136552
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2} .0031857{col 31}{space 2} .0269414{col 42}{space 1}    0.12{col 51}{space 3}0.906{col 59}{space 4}-.0496185{col 72}{space 3} .0559899
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.0736744{col 31}{space 2} .0423759{col 42}{space 1}   -1.74{col 51}{space 3}0.082{col 59}{space 4}-.1567297{col 72}{space 3} .0093808
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2} -.688446{col 31}{space 2} .2843446{col 42}{space 1}   -2.42{col 51}{space 3}0.015{col 59}{space 4}-1.245751{col 72}{space 3}-.1311408
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .5861076{col 31}{space 2} .2992007{col 42}{space 1}    1.96{col 51}{space 3}0.050{col 59}{space 4} -.000315{col 72}{space 3}  1.17253
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2}  2.32127{col 31}{space 2} .3770025{col 42}{space 1}    6.16{col 51}{space 3}0.000{col 59}{space 4} 1.582358{col 72}{space 3} 3.060181
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.804854{col 31}{space 2}  .474416{col 42}{space 1}    3.80{col 51}{space 3}0.000{col 59}{space 4}  .875016{col 72}{space 3} 2.734692
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2820115{col 31}{space 2}  .414235{col 42}{space 1}   -0.68{col 51}{space 3}0.496{col 59}{space 4}-1.093897{col 72}{space 3} .5298741
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.266835{col 31}{space 2} .4215513{col 42}{space 1}    3.01{col 51}{space 3}0.003{col 59}{space 4} .4406096{col 72}{space 3}  2.09306
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} 1.170556{col 31}{space 2} .2907858{col 42}{space 1}    4.03{col 51}{space 3}0.000{col 59}{space 4} .6006259{col 72}{space 3} 1.740485
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4768097{col 31}{space 2} .3313855{col 42}{space 1}    1.44{col 51}{space 3}0.150{col 59}{space 4} -.172694{col 72}{space 3} 1.126313
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2} 1.104878{col 31}{space 2} .2646002{col 42}{space 1}    4.18{col 51}{space 3}0.000{col 59}{space 4} .5862714{col 72}{space 3} 1.623485
{txt}{space 15}t2 {c |}{col 19}{res}{space 2} 4.271191{col 31}{space 2} .3056299{col 42}{space 1}   13.98{col 51}{space 3}0.000{col 59}{space 4} 3.672167{col 72}{space 3} 4.870214
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} .7760378{col 31}{space 2} 2.021743{col 42}{space 1}    0.38{col 51}{space 3}0.701{col 59}{space 4}-3.186505{col 72}{space 3} 4.738581
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. order d_sh_mfg d_sh_mfg_2007

. do "C:\Users\alove\Documents\GitHub\RUV\ADH\codes\test_regs.do"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. gen labsup = wkw * wkhp
{txt}(1,888,852 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(351 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,888,501 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(351 real changes made)

{com}. 
. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}.                 
.                 
.         * multiply sample weight (perwt) by afactor to map from PUMA's to CZ
.         gen wt = perwt * labsup * afactor
{txt}
{com}.         
.         * population by czone
.         bys czone: egen pop_cz = sum(wt) 
{txt}
{com}. 
. tempfile temp
{txt}
{com}. preserve
{txt}
{com}. gcollapse (mean) pop_cz, by(czone)
{res}{txt}{res}{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. restore
{txt}
{com}. 
. ***
. *** collapse by CZ
. ***     
. 
.   gcollapse (sum) mfg nilf empl unempl [iw=wt] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   merge 1:1 czone using `temp', nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             741{txt}  
{col 5}{hline 41}

{com}.   
. 
. * Gen variable of year for merge and save temp file
. gen yr = 2000
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000003.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
.         use raw_data/workfile_china.dta, replace
{txt}
{com}.         merge 1:1 czone yr using `temp'
{res}{txt}{p 0 7 2}
(variable
{bf:yr} was {bf:int}, now {bf:float} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             741
{txt}{col 9}from master{col 30}{res}             722{txt}  (_merge==1)
{col 9}from using{col 30}{res}              19{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             722{txt}  (_merge==3)
{col 5}{hline 41}

{com}.         drop if _m == 2
{txt}(19 observations deleted)

{com}.         drop _m
{txt}
{com}.         
.         
. * this rename command help us in the loops code
. rename (d_sh_empl_mfg d_sh_empl_nmfg l_sh_empl_mfg l_sh_empl_nmfg pop_cz lnchg_popworkage ) (d_sh_mfg d_sh_nmfg l_sh_mfg l_sh_nmfg pop_1664 d_sh_lnpop)
{res}{txt}
{com}. gen nmfg = empl - mfg
{txt}(722 missing values generated)

{com}. 
. * gen log popcount changes for working age population
. gen sh_lnpop = ln(pop_1664)*100
{txt}(722 missing values generated)

{com}. gen l_sh_lnpop = ln(l_popcount)*100
{txt}
{com}. 
. * here we create the outcomes as shares of the working pop
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. gen sh_`var' = 100*(`var'/pop_1664) 
{txt}  3{com}. {c )-}       
{txt}(722 missing values generated)
(722 missing values generated)
(722 missing values generated)
(722 missing values generated)

{com}. 
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. 
.         gen d_sh_`var'_2007 = (10/(2007-2000)) * (sh_`var' - l_sh_`var' ) if yr == 2000
{txt}  3{com}.         replace d_sh_`var'_2007 = d_sh_`var' if yr == 1990 
{txt}  4{com}. 
. {c )-}
{txt}(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)

{com}. 
. 
. ivregress 2sls d_sh_mfg (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48], cluster(statefip)
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}    702.76
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.3429
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{ralign 83:(Std. err. adjusted for {res:48} clusters in {res:statefip})}
{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 19}{c |}{col 31}    Robust
{col 1}         d_sh_mfg{col 19}{c |} Coefficient{col 31}  std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-.5963601{col 31}{space 2} .0987739{col 42}{space 1}   -6.04{col 51}{space 3}0.000{col 59}{space 4}-.7899533{col 72}{space 3}-.4027668
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0402193{col 31}{space 2} .0131419{col 42}{space 1}   -3.06{col 51}{space 3}0.002{col 59}{space 4} -.065977{col 72}{space 3}-.0144616
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}   .01314{col 31}{space 2} .0121955{col 42}{space 1}    1.08{col 51}{space 3}0.281{col 59}{space 4}-.0107627{col 72}{space 3} .0370428
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0303784{col 31}{space 2} .0108416{col 42}{space 1}    2.80{col 51}{space 3}0.005{col 59}{space 4} .0091292{col 72}{space 3} .0516275
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.0058603{col 31}{space 2} .0244685{col 42}{space 1}   -0.24{col 51}{space 3}0.811{col 59}{space 4}-.0538176{col 72}{space 3}  .042097
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.2448902{col 31}{space 2} .0637471{col 42}{space 1}   -3.84{col 51}{space 3}0.000{col 59}{space 4}-.3698322{col 72}{space 3}-.1199483
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}-.0590307{col 31}{space 2} .2369742{col 42}{space 1}   -0.25{col 51}{space 3}0.803{col 59}{space 4}-.5234916{col 72}{space 3} .4054303
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .3129508{col 31}{space 2}  .281184{col 42}{space 1}    1.11{col 51}{space 3}0.266{col 59}{space 4}-.2381598{col 72}{space 3} .8640614
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2} 1.260668{col 31}{space 2} .3370428{col 42}{space 1}    3.74{col 51}{space 3}0.000{col 59}{space 4} .6000762{col 72}{space 3}  1.92126
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.623558{col 31}{space 2}  .372155{col 42}{space 1}    4.36{col 51}{space 3}0.000{col 59}{space 4} .8941478{col 72}{space 3} 2.352969
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2882165{col 31}{space 2} .2336567{col 42}{space 1}   -1.23{col 51}{space 3}0.217{col 59}{space 4}-.7461752{col 72}{space 3} .1697421
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.076234{col 31}{space 2} .3346871{col 42}{space 1}    3.22{col 51}{space 3}0.001{col 59}{space 4} .4202592{col 72}{space 3} 1.732208
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} .7316363{col 31}{space 2}   .23137{col 42}{space 1}    3.16{col 51}{space 3}0.002{col 59}{space 4} .2781593{col 72}{space 3} 1.185113
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4021016{col 31}{space 2} .2573061{col 42}{space 1}    1.56{col 51}{space 3}0.118{col 59}{space 4} -.102209{col 72}{space 3} .9064122
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}  .026829{col 31}{space 2} .1911116{col 42}{space 1}    0.14{col 51}{space 3}0.888{col 59}{space 4}-.3477427{col 72}{space 3} .4014008
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-.2424246{col 31}{space 2} .4005703{col 42}{space 1}   -0.61{col 51}{space 3}0.545{col 59}{space 4}-1.027528{col 72}{space 3} .5426788
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 6.278516{col 31}{space 2} 1.937265{col 42}{space 1}    3.24{col 51}{space 3}0.001{col 59}{space 4} 2.481547{col 72}{space 3} 10.07548
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
. ivregress 2sls d_sh_mfg_2007 (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48], cluster(statefip)
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   3538.64
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.7471
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{ralign 83:(Std. err. adjusted for {res:48} clusters in {res:statefip})}
{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 19}{c |}{col 31}    Robust
{col 1}    d_sh_mfg_2007{col 19}{c |} Coefficient{col 31}  std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2} .0248561{col 31}{space 2} .0723311{col 42}{space 1}    0.34{col 51}{space 3}0.731{col 59}{space 4}-.1169101{col 72}{space 3} .1666224
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0380613{col 31}{space 2} .0191181{col 42}{space 1}   -1.99{col 51}{space 3}0.046{col 59}{space 4}-.0755321{col 72}{space 3}-.0005905
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}-.0151151{col 31}{space 2} .0121956{col 42}{space 1}   -1.24{col 51}{space 3}0.215{col 59}{space 4}-.0390181{col 72}{space 3} .0087878
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2}-.0071024{col 31}{space 2} .0105908{col 42}{space 1}   -0.67{col 51}{space 3}0.502{col 59}{space 4}  -.02786{col 72}{space 3} .0136552
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2} .0031857{col 31}{space 2} .0269414{col 42}{space 1}    0.12{col 51}{space 3}0.906{col 59}{space 4}-.0496185{col 72}{space 3} .0559899
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.0736744{col 31}{space 2} .0423759{col 42}{space 1}   -1.74{col 51}{space 3}0.082{col 59}{space 4}-.1567297{col 72}{space 3} .0093808
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2} -.688446{col 31}{space 2} .2843446{col 42}{space 1}   -2.42{col 51}{space 3}0.015{col 59}{space 4}-1.245751{col 72}{space 3}-.1311408
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .5861076{col 31}{space 2} .2992007{col 42}{space 1}    1.96{col 51}{space 3}0.050{col 59}{space 4} -.000315{col 72}{space 3}  1.17253
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2}  2.32127{col 31}{space 2} .3770025{col 42}{space 1}    6.16{col 51}{space 3}0.000{col 59}{space 4} 1.582358{col 72}{space 3} 3.060181
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.804854{col 31}{space 2}  .474416{col 42}{space 1}    3.80{col 51}{space 3}0.000{col 59}{space 4}  .875016{col 72}{space 3} 2.734692
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2820115{col 31}{space 2}  .414235{col 42}{space 1}   -0.68{col 51}{space 3}0.496{col 59}{space 4}-1.093897{col 72}{space 3} .5298741
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.266835{col 31}{space 2} .4215513{col 42}{space 1}    3.01{col 51}{space 3}0.003{col 59}{space 4} .4406096{col 72}{space 3}  2.09306
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} 1.170556{col 31}{space 2} .2907858{col 42}{space 1}    4.03{col 51}{space 3}0.000{col 59}{space 4} .6006259{col 72}{space 3} 1.740485
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4768097{col 31}{space 2} .3313855{col 42}{space 1}    1.44{col 51}{space 3}0.150{col 59}{space 4} -.172694{col 72}{space 3} 1.126313
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2} 1.104878{col 31}{space 2} .2646002{col 42}{space 1}    4.18{col 51}{space 3}0.000{col 59}{space 4} .5862714{col 72}{space 3} 1.623485
{txt}{space 15}t2 {c |}{col 19}{res}{space 2} 4.271191{col 31}{space 2} .3056299{col 42}{space 1}   13.98{col 51}{space 3}0.000{col 59}{space 4} 3.672167{col 72}{space 3} 4.870214
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} .7760378{col 31}{space 2} 2.021743{col 42}{space 1}    0.38{col 51}{space 3}0.701{col 59}{space 4}-3.186505{col 72}{space 3} 4.738581
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. do "C:\Users\alove\AppData\Local\Temp\STD2578_000000.tmp"
{txt}
{com}. 
. */
. 
. clear
{txt}
{com}. clear all
{res}{txt}
{com}. clear mata
{txt}
{com}. set more off
{txt}
{com}. set matsize 1000
{txt}{bf:set matsize} ignored.
{p 4 4 2}
Matrix sizes are no longer limited by
{bf:c(matsize)} in modern Statas.
Matrix sizes are now limited by edition of Stata.
See {help limits} for more details.
{p_end}

{com}. 
. * Directories
. global alonso = 1 
{txt}
{com}. ************************************************************************
. 
. if $alonso == 1 {c -(}
.         global main "C:/Users/alove/Documents/GitHub/RUV/ADH"
.         global outputs "C:/Users/alove/Documents/GitHub/RUV/ADH/results"
.         {c )-}
{txt}
{com}. if $alonso == 0  {c -(}
.         global main "RUV/ADH"
.         global outputs "RUV/ADH/results"
.         {c )-}
{txt}
{com}.         
.         
. ************************************************************************
. cd $main
{res}C:\Users\alove\Documents\GitHub\RUV\ADH
{txt}
{com}. 
. use year puma perwt age classwkrd gq empstat ind1990 statefip wkswork1 uhrswork educ occ using raw_data/ipums_2005_2021.dta, clear
{txt}
{com}. global yr 2006
{txt}
{com}. global y1 = ${c -(}yr{c )-} 
{txt}
{com}. global y2 = ${c -(}yr{c )-} + 1
{txt}
{com}. global y3 = ${c -(}yr{c )-} + 2
{txt}
{com}. 
. keep if inlist(year,${c -(}y1{c )-},${c -(}y2{c )-},${c -(}y3{c )-}) // years  
{txt}(27,307,614 observations deleted)

{com}. 
. * Run David Dorn ind1990dd recode (https://www.ddorn.net/data.htm)
. qui do "codes/subfile_ind1990dd"
{txt}
{com}. 
. cap keep if age >= 16 & age <= 64
{txt}
{com}. * drop unpaid family workers
. drop if classwkrd == 29
{txt}(16,523 observations deleted)

{com}. * institutional group quarters
. drop if gq == 3
{txt}(92,020 observations deleted)

{com}. 
. * Define count of nilf, manuf employment, non-manuf and unemployment
. gen empl = (empstat==1)
{txt}
{com}. gen unempl = (empstat==2)
{txt}
{com}. gen nilf = (empstat==3)
{txt}
{com}. 
. * 
. * Define employment in manufacturing using ind1990dd (David Dorn Webpage, https://www.ddorn.net/data.htm, [C9] pdf file)
. gen mfg = 0
{txt}
{com}. replace mfg = 1 if inrange(ind1990dd,100,122) & empl == 1 //employ in manuf
{txt}(43,008 real changes made)

{com}. replace mfg = 1 if ind1990dd == 130 & empl == 1 //employ in manuf
{txt}(828 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,132,152) & empl == 1 //employ in manuf
{txt}(18,237 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,230,241) & empl == 1 //employ in manuf
{txt}(20,418 real changes made)

{com}. replace mfg = 1 if ind1990dd == 242 & empl == 1 //employ in manuf
{txt}(16,343 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,160,162) & empl == 1 //employ in manuf
{txt}(13,781 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,171,172) & empl == 1 //employ in manuf
{txt}(42,469 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,180,192) & empl == 1 //employ in manuf
{txt}(37,337 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,200,201) & empl == 1 //employ in manuf
{txt}(5,856 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,210,212) & empl == 1 //employ in manuf
{txt}(19,097 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,221,222) & empl == 1 //employ in manuf
{txt}(1,537 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,250,262) & empl == 1 //employ in manuf
{txt}(15,533 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,270,301) & empl == 1 //employ in manuf
{txt}(46,459 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,310,342) & empl == 1 //employ in manuf
{txt}(98,442 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,351,372) & empl == 1 //employ in manuf
{txt}(90,049 real changes made)

{com}. replace mfg = 1 if inrange(ind1990dd,390,392) & empl == 1 //employ in manuf
{txt}(27,839 real changes made)

{com}. 
. 
.  *Labor supply
. rename (wkswork1 uhrswork) (wkw wkhp)
{res}{txt}
{com}. gen labsup = wkw * wkhp
{txt}(1,888,852 missing values generated)

{com}. egen g1 = group(educ occ)
{res}{txt}
{com}. bys g1: egen ls_g1  = mean(labsup)
{txt}(351 missing values generated)

{com}. bys educ: egen ls_schl = mean(labsup)
{txt}
{com}. replace labsup = ls_g1 if labsup == .
{txt}(1,888,501 real changes made)

{com}. replace labsup = ls_schl if labsup == .
{txt}(351 real changes made)

{com}. replace labsup = 1 if labsup == 0
{txt}(1,024,852 real changes made)

{com}. 
. 
.                 rename statefip st
{res}{txt}
{com}.                 label val st
{txt}
{com}.                 tostring puma st, replace
{txt}puma was {res:long} now {res:str5}
st was {res:byte} now {res:str2}

{com}.                 gen length = length(puma)
{txt}
{com}.                 replace puma = "0" + puma if length == 3
{txt}(1,701,648 real changes made)

{com}.                 gen puma2000 = st + puma
{txt}
{com}.                 destring puma2000, replace
{txt}puma2000: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}.                 joinby puma2000 using raw_data/cw_puma2000_czone.dta
{txt}
{com}.                 
.                 
.         * multiply sample weight (perwt) by afactor to map from PUMA's to CZ
.         gen wt = perwt * labsup * afactor
{txt}
{com}.         
.         * population by czone
. ***
. *** collapse by CZ
. ***     
.   gen pop_cz = 1
{txt}
{com}.   gcollapse (sum) mfg nilf empl unempl pop_cz [iw=wt] , by(czone)
{res}{txt}{res}{txt}{res}{txt}
{com}.   
. * Gen variable of year for merge and save temp file
. gen yr = 2000
{txt}
{com}. tempfile temp           
{txt}
{com}. save `temp', replace
{txt}{p 0 4 2}
(file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
not found)
{p_end}
{p 0 4 2}
file {bf}
C:\Users\alove\AppData\Local\Temp\ST_2578_000001.tmp{rm}
saved
as .dta format
{p_end}

{com}. 
.         use raw_data/workfile_china.dta, replace
{txt}
{com}.         merge 1:1 czone yr using `temp'
{res}{txt}{p 0 7 2}
(variable
{bf:yr} was {bf:int}, now {bf:float} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             741
{txt}{col 9}from master{col 30}{res}             722{txt}  (_merge==1)
{col 9}from using{col 30}{res}              19{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             722{txt}  (_merge==3)
{col 5}{hline 41}

{com}.         drop if _m == 2
{txt}(19 observations deleted)

{com}.         drop _m
{txt}
{com}.         
.         
. * this rename command help us in the loops code
. rename (d_sh_empl_mfg d_sh_empl_nmfg l_sh_empl_mfg l_sh_empl_nmfg pop_cz lnchg_popworkage ) (d_sh_mfg d_sh_nmfg l_sh_mfg l_sh_nmfg pop_1664 d_sh_lnpop)
{res}{txt}
{com}. gen nmfg = empl - mfg
{txt}(722 missing values generated)

{com}. 
. * gen log popcount changes for working age population
. gen sh_lnpop = ln(pop_1664)*100
{txt}(722 missing values generated)

{com}. gen l_sh_lnpop = ln(l_popcount)*100
{txt}
{com}. 
. * here we create the outcomes as shares of the working pop
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. gen sh_`var' = 100*(`var'/pop_1664) 
{txt}  3{com}. {c )-}       
{txt}(722 missing values generated)
(722 missing values generated)
(722 missing values generated)
(722 missing values generated)

{com}. 
. foreach var in mfg nmfg nilf unempl {c -(}
{txt}  2{com}. 
.         gen d_sh_`var'_2007 = (10/(2007-2000)) * (sh_`var' - l_sh_`var' ) if yr == 2000
{txt}  3{com}.         replace d_sh_`var'_2007 = d_sh_`var' if yr == 1990 
{txt}  4{com}. 
. {c )-}
{txt}(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)
(722 missing values generated)
(722 real changes made)

{com}. 
. 
. ivregress 2sls d_sh_mfg (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48], cluster(statefip)
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}    702.76
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.3429
{txt}{col 51}Root MSE{col 67}=    {res} 1.4145

{txt}{ralign 83:(Std. err. adjusted for {res:48} clusters in {res:statefip})}
{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 19}{c |}{col 31}    Robust
{col 1}         d_sh_mfg{col 19}{c |} Coefficient{col 31}  std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2}-.5963601{col 31}{space 2} .0987739{col 42}{space 1}   -6.04{col 51}{space 3}0.000{col 59}{space 4}-.7899533{col 72}{space 3}-.4027668
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0402193{col 31}{space 2} .0131419{col 42}{space 1}   -3.06{col 51}{space 3}0.002{col 59}{space 4} -.065977{col 72}{space 3}-.0144616
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}   .01314{col 31}{space 2} .0121955{col 42}{space 1}    1.08{col 51}{space 3}0.281{col 59}{space 4}-.0107627{col 72}{space 3} .0370428
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2} .0303784{col 31}{space 2} .0108416{col 42}{space 1}    2.80{col 51}{space 3}0.005{col 59}{space 4} .0091292{col 72}{space 3} .0516275
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}-.0058603{col 31}{space 2} .0244685{col 42}{space 1}   -0.24{col 51}{space 3}0.811{col 59}{space 4}-.0538176{col 72}{space 3}  .042097
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.2448902{col 31}{space 2} .0637471{col 42}{space 1}   -3.84{col 51}{space 3}0.000{col 59}{space 4}-.3698322{col 72}{space 3}-.1199483
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}-.0590307{col 31}{space 2} .2369742{col 42}{space 1}   -0.25{col 51}{space 3}0.803{col 59}{space 4}-.5234916{col 72}{space 3} .4054303
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2} .3129508{col 31}{space 2}  .281184{col 42}{space 1}    1.11{col 51}{space 3}0.266{col 59}{space 4}-.2381598{col 72}{space 3} .8640614
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2} 1.260668{col 31}{space 2} .3370428{col 42}{space 1}    3.74{col 51}{space 3}0.000{col 59}{space 4} .6000762{col 72}{space 3}  1.92126
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.623558{col 31}{space 2}  .372155{col 42}{space 1}    4.36{col 51}{space 3}0.000{col 59}{space 4} .8941478{col 72}{space 3} 2.352969
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2882165{col 31}{space 2} .2336567{col 42}{space 1}   -1.23{col 51}{space 3}0.217{col 59}{space 4}-.7461752{col 72}{space 3} .1697421
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.076234{col 31}{space 2} .3346871{col 42}{space 1}    3.22{col 51}{space 3}0.001{col 59}{space 4} .4202592{col 72}{space 3} 1.732208
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} .7316363{col 31}{space 2}   .23137{col 42}{space 1}    3.16{col 51}{space 3}0.002{col 59}{space 4} .2781593{col 72}{space 3} 1.185113
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4021016{col 31}{space 2} .2573061{col 42}{space 1}    1.56{col 51}{space 3}0.118{col 59}{space 4} -.102209{col 72}{space 3} .9064122
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}  .026829{col 31}{space 2} .1911116{col 42}{space 1}    0.14{col 51}{space 3}0.888{col 59}{space 4}-.3477427{col 72}{space 3} .4014008
{txt}{space 15}t2 {c |}{col 19}{res}{space 2}-.2424246{col 31}{space 2} .4005703{col 42}{space 1}   -0.61{col 51}{space 3}0.545{col 59}{space 4}-1.027528{col 72}{space 3} .5426788
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} 6.278516{col 31}{space 2} 1.937265{col 42}{space 1}    3.24{col 51}{space 3}0.001{col 59}{space 4} 2.481547{col 72}{space 3} 10.07548
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
. ivregress 2sls d_sh_mfg_2007 (d_tradeusch_pw =d_tradeotch_pw_lag )l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg* t2 [aw=timepwt48], cluster(statefip)
{res}{txt}(sum of wgt is   2.0000e+00)
{res}
{txt}{col 1}Instrumental variables 2SLS regression{col 51}Number of obs{col 67}= {res}     1,444
{txt}{col 1}{col 51}Wald chi2({res}16{txt}){col 67}= {res}   3538.76
{txt}{col 1}{col 51}Prob > chi2{col 67}= {res}    0.0000
{txt}{col 1}{col 51}R-squared{col 67}= {res}    0.7470
{txt}{col 51}Root MSE{col 67}=    {res} 1.4142

{txt}{ralign 83:(Std. err. adjusted for {res:48} clusters in {res:statefip})}
{hline 18}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 19}{c |}{col 31}    Robust
{col 1}    d_sh_mfg_2007{col 19}{c |} Coefficient{col 31}  std. err.{col 43}      z{col 51}   P>|z|{col 59}     [95% con{col 72}f. interval]
{hline 18}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}d_tradeusch_pw {c |}{col 19}{res}{space 2} .0245794{col 31}{space 2} .0722918{col 42}{space 1}    0.34{col 51}{space 3}0.734{col 59}{space 4}-.1171098{col 72}{space 3} .1662687
{txt}l_shind_manuf_cbp {c |}{col 19}{res}{space 2}-.0380647{col 31}{space 2} .0191128{col 42}{space 1}   -1.99{col 51}{space 3}0.046{col 59}{space 4} -.075525{col 72}{space 3}-.0006043
{txt}{space 4}l_sh_popedu_c {c |}{col 19}{res}{space 2}-.0150987{col 31}{space 2} .0121911{col 42}{space 1}   -1.24{col 51}{space 3}0.216{col 59}{space 4}-.0389927{col 72}{space 3} .0087954
{txt}{space 4}l_sh_popfborn {c |}{col 19}{res}{space 2}-.0070871{col 31}{space 2} .0105902{col 42}{space 1}   -0.67{col 51}{space 3}0.503{col 59}{space 4}-.0278435{col 72}{space 3} .0136694
{txt}{space 6}l_sh_empl_f {c |}{col 19}{res}{space 2}  .003207{col 31}{space 2} .0269363{col 42}{space 1}    0.12{col 51}{space 3}0.905{col 59}{space 4}-.0495871{col 72}{space 3} .0560011
{txt}{space 3}l_sh_routine33 {c |}{col 19}{res}{space 2}-.0737731{col 31}{space 2} .0423797{col 42}{space 1}   -1.74{col 51}{space 3}0.082{col 59}{space 4}-.1568358{col 72}{space 3} .0092895
{txt}{space 1}l_task_outsource {c |}{col 19}{res}{space 2}-.6881331{col 31}{space 2} .2842787{col 42}{space 1}   -2.42{col 51}{space 3}0.015{col 59}{space 4}-1.245309{col 72}{space 3}-.1309572
{txt}{space 7}reg_midatl {c |}{col 19}{res}{space 2}  .586013{col 31}{space 2} .2991488{col 42}{space 1}    1.96{col 51}{space 3}0.050{col 59}{space 4}-.0003078{col 72}{space 3} 1.172334
{txt}{space 8}reg_encen {c |}{col 19}{res}{space 2} 2.320892{col 31}{space 2} .3769079{col 42}{space 1}    6.16{col 51}{space 3}0.000{col 59}{space 4} 1.582166{col 72}{space 3} 3.059618
{txt}{space 8}reg_wncen {c |}{col 19}{res}{space 2} 1.804765{col 31}{space 2} .4743552{col 42}{space 1}    3.80{col 51}{space 3}0.000{col 59}{space 4} .8750457{col 72}{space 3} 2.734484
{txt}{space 9}reg_satl {c |}{col 19}{res}{space 2}-.2821192{col 31}{space 2} .4141222{col 42}{space 1}   -0.68{col 51}{space 3}0.496{col 59}{space 4}-1.093784{col 72}{space 3} .5295454
{txt}{space 8}reg_escen {c |}{col 19}{res}{space 2} 1.266609{col 31}{space 2} .4214461{col 42}{space 1}    3.01{col 51}{space 3}0.003{col 59}{space 4}   .44059{col 72}{space 3} 2.092629
{txt}{space 8}reg_wscen {c |}{col 19}{res}{space 2} 1.170369{col 31}{space 2} .2907118{col 42}{space 1}    4.03{col 51}{space 3}0.000{col 59}{space 4} .6005848{col 72}{space 3} 1.740154
{txt}{space 8}reg_mount {c |}{col 19}{res}{space 2} .4767275{col 31}{space 2} .3313292{col 42}{space 1}    1.44{col 51}{space 3}0.150{col 59}{space 4}-.1726659{col 72}{space 3} 1.126121
{txt}{space 8}reg_pacif {c |}{col 19}{res}{space 2}  1.10435{col 31}{space 2}  .264521{col 42}{space 1}    4.17{col 51}{space 3}0.000{col 59}{space 4} .5858981{col 72}{space 3} 1.622801
{txt}{space 15}t2 {c |}{col 19}{res}{space 2} 4.269161{col 31}{space 2} .3055459{col 42}{space 1}   13.97{col 51}{space 3}0.000{col 59}{space 4} 3.670302{col 72}{space 3}  4.86802
{txt}{space 12}_cons {c |}{col 19}{res}{space 2} .7774937{col 31}{space 2} 2.021473{col 42}{space 1}    0.38{col 51}{space 3}0.701{col 59}{space 4}-3.184522{col 72}{space 3} 4.739509
{txt}{hline 18}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{p 0 14 56}Instrumented: {res:d_tradeusch_pw}{p_end}
{p 0 14 56}{space 1}Instruments: {res:l_shind_manuf_cbp l_sh_popedu_c l_sh_popfborn l_sh_empl_f l_sh_routine33 l_task_outsource reg_midatl reg_encen reg_wncen reg_satl reg_escen reg_wscen reg_mount reg_pacif t2 d_tradeotch_pw_lag}{p_end}

{com}. 
{txt}end of do-file

{com}. clear

. exit, clear
